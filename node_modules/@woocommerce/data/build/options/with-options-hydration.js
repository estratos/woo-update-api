"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withOptionsHydration = exports.useOptionsHydration = void 0;
/**
 * External dependencies
 */
const compose_1 = require("@wordpress/compose");
const data_1 = require("@wordpress/data");
const element_1 = require("@wordpress/element");
/**
 * Internal dependencies
 */
const constants_1 = require("./constants");
const useOptionsHydration = (data) => {
    const dataRef = (0, element_1.useRef)(data);
    // @ts-expect-error registry is not defined in the wp.data typings
    (0, data_1.useSelect)((select, registry) => {
        if (!dataRef.current) {
            return;
        }
        const { isResolving, hasFinishedResolution } = select(constants_1.STORE_NAME);
        const { startResolution, finishResolution, receiveOptions } = registry.dispatch(constants_1.STORE_NAME);
        const names = Object.keys(dataRef.current);
        names.forEach((name) => {
            if (!isResolving('getOption', [name]) &&
                !hasFinishedResolution('getOption', [name])) {
                startResolution('getOption', [name]);
                receiveOptions({ [name]: dataRef.current[name] });
                finishResolution('getOption', [name]);
            }
        });
    }, []);
};
exports.useOptionsHydration = useOptionsHydration;
const withOptionsHydration = (data) => (0, compose_1.createHigherOrderComponent)((OriginalComponent) => (props) => {
    (0, exports.useOptionsHydration)(data);
    return (0, element_1.createElement)(OriginalComponent, Object.assign({}, props));
}, 'withOptionsHydration');
exports.withOptionsHydration = withOptionsHydration;
