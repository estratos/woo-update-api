"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateImportation = exports.setImportError = exports.setImportTotals = exports.setImportStatus = exports.setSkipPrevious = exports.setImportPeriod = exports.setImportStarted = void 0;
/**
 * External dependencies
 */
const data_controls_1 = require("@wordpress/data-controls");
/**
 * Internal dependencies
 */
const action_types_1 = __importDefault(require("./action-types"));
function setImportStarted(activeImport) {
    return {
        type: action_types_1.default.SET_IMPORT_STARTED,
        activeImport,
    };
}
exports.setImportStarted = setImportStarted;
function setImportPeriod(date, dateModified) {
    if (!dateModified) {
        return {
            type: action_types_1.default.SET_IMPORT_PERIOD,
            date,
        };
    }
    return {
        type: action_types_1.default.SET_IMPORT_DATE,
        date,
    };
}
exports.setImportPeriod = setImportPeriod;
function setSkipPrevious(skipPrevious) {
    return {
        type: action_types_1.default.SET_SKIP_IMPORTED,
        skipPrevious,
    };
}
exports.setSkipPrevious = setSkipPrevious;
function setImportStatus(query, importStatus) {
    return {
        type: action_types_1.default.SET_IMPORT_STATUS,
        importStatus,
        query,
    };
}
exports.setImportStatus = setImportStatus;
function setImportTotals(query, importTotals) {
    return {
        type: action_types_1.default.SET_IMPORT_TOTALS,
        importTotals,
        query,
    };
}
exports.setImportTotals = setImportTotals;
function setImportError(queryOrPath, error) {
    return {
        type: action_types_1.default.SET_IMPORT_ERROR,
        error,
        query: queryOrPath,
    };
}
exports.setImportError = setImportError;
function* updateImportation(path, importStarted = false) {
    yield setImportStarted(importStarted);
    try {
        const response = yield (0, data_controls_1.apiFetch)({ path, method: 'POST' });
        return response;
    }
    catch (error) {
        yield setImportError(path, error);
        throw error;
    }
}
exports.updateImportation = updateImportation;
