"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSelectors = exports.getItemUpdateError = exports.getItemsError = exports.getItems = exports.getItemError = exports.getItem = exports.getItemDeleteError = exports.getItemCreateError = void 0;
/**
 * External dependencies
 */
const rememo_1 = __importDefault(require("rememo"));
/**
 * Internal dependencies
 */
const utils_1 = require("../utils");
const crud_actions_1 = __importDefault(require("./crud-actions"));
const getItemCreateError = (state, query) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.CREATE_ITEM, query);
    return state.errors[itemQuery];
};
exports.getItemCreateError = getItemCreateError;
const getItemDeleteError = (state, id) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.DELETE_ITEM, { id });
    return state.errors[itemQuery];
};
exports.getItemDeleteError = getItemDeleteError;
const getItem = (state, id) => {
    return state.data[id];
};
exports.getItem = getItem;
const getItemError = (state, id) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.GET_ITEM, { id });
    return state.errors[itemQuery];
};
exports.getItemError = getItemError;
exports.getItems = (0, rememo_1.default)((state, query) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.GET_ITEMS, query);
    const ids = state.items[itemQuery]
        ? state.items[itemQuery].data
        : undefined;
    if (!ids) {
        return null;
    }
    if (query._fields) {
        return ids.map((id) => {
            return query._fields.reduce((item, field) => {
                return Object.assign(Object.assign({}, item), { [field]: state.data[id][field] });
            }, {});
        });
    }
    return ids
        .map((id) => {
        return state.data[id];
    })
        .filter((item) => item !== undefined);
}, (state, query) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.GET_ITEMS, query);
    const ids = state.items[itemQuery]
        ? state.items[itemQuery].data
        : undefined;
    return [
        state.items[itemQuery],
        ...(ids || []).map((id) => {
            return state.data[id];
        }),
    ];
});
const getItemsError = (state, query) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.GET_ITEMS, query);
    return state.errors[itemQuery];
};
exports.getItemsError = getItemsError;
const getItemUpdateError = (state, id) => {
    const itemQuery = (0, utils_1.getResourceName)(crud_actions_1.default.UPDATE_ITEM, { id });
    return state.errors[itemQuery];
};
exports.getItemUpdateError = getItemUpdateError;
const createSelectors = ({ resourceName, pluralResourceName, }) => {
    return {
        [`get${resourceName}`]: exports.getItem,
        [`get${resourceName}Error`]: exports.getItemError,
        [`get${pluralResourceName}`]: exports.getItems,
        [`get${pluralResourceName}Error`]: exports.getItemsError,
        [`get${resourceName}CreateError`]: exports.getItemCreateError,
        [`get${resourceName}DeleteError`]: exports.getItemDeleteError,
        [`get${resourceName}UpdateError`]: exports.getItemUpdateError,
    };
};
exports.createSelectors = createSelectors;
