"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNotes = void 0;
/**
 * External dependencies
 */
const i18n_1 = require("@wordpress/i18n");
const url_1 = require("@wordpress/url");
const data_controls_1 = require("@wordpress/data-controls");
const dompurify_1 = require("dompurify");
/**
 * Internal dependencies
 */
const constants_1 = require("../constants");
const actions_1 = require("./actions");
let notesExceededWarningShown = false;
function* getNotes(query = {}) {
    const url = (0, url_1.addQueryArgs)(`${constants_1.NAMESPACE}/admin/notes`, query);
    try {
        const notes = yield (0, data_controls_1.apiFetch)({
            path: url,
        });
        if (!notesExceededWarningShown) {
            const noteNames = notes.reduce((filtered, note) => {
                const content = (0, dompurify_1.sanitize)(note.content, {
                    ALLOWED_TAGS: [],
                });
                if (content.length > 320) {
                    filtered.push(note.name);
                }
                return filtered;
            }, []);
            if (noteNames.length) {
                /* eslint-disable no-console */
                console.warn((0, i18n_1.sprintf)(
                /* translators: %s = link to developer blog */
                (0, i18n_1.__)('WooCommerce Admin will soon limit inbox note contents to 320 characters. For more information, please visit %s. The following notes currently exceeds that limit:', 'woocommerce'), 'https://developer.woocommerce.com/?p=10749') +
                    '\n' +
                    noteNames
                        .map((name, idx) => {
                        return `  ${idx + 1}. ${name}`;
                    })
                        .join('\n'));
                /* eslint-enable no-console */
                notesExceededWarningShown = true;
            }
        }
        yield (0, actions_1.setNotes)(notes);
        yield (0, actions_1.setNotesQuery)(query, notes.map((note) => note.id));
    }
    catch (error) {
        yield (0, actions_1.setError)('getNotes', error);
    }
}
exports.getNotes = getNotes;
