"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Internal dependencies
 */
const action_types_1 = __importDefault(require("./action-types"));
const notesReducer = (state = {
    errors: {},
    noteQueries: {},
    notes: {},
    requesting: {},
}, { error, isRequesting, isUpdating, noteFields, noteId, noteIds, notes, query, selector, type, }) => {
    switch (type) {
        case action_types_1.default.SET_NOTES:
            state = Object.assign(Object.assign({}, state), { notes: Object.assign(Object.assign({}, state.notes), notes.reduce((acc, item) => {
                    acc[item.id] = item;
                    return acc;
                }, {})) });
            break;
        case action_types_1.default.SET_NOTES_QUERY:
            state = Object.assign(Object.assign({}, state), { noteQueries: Object.assign(Object.assign({}, state.noteQueries), { [JSON.stringify(query)]: noteIds }) });
            break;
        case action_types_1.default.SET_ERROR:
            state = Object.assign(Object.assign({}, state), { errors: Object.assign(Object.assign({}, state.errors), { [selector]: error }) });
            break;
        case action_types_1.default.SET_NOTE:
            state = Object.assign(Object.assign({}, state), { notes: Object.assign(Object.assign({}, state.notes), { [noteId]: noteFields }) });
            break;
        case action_types_1.default.SET_NOTE_IS_UPDATING:
            state = Object.assign(Object.assign({}, state), { notes: Object.assign(Object.assign({}, state.notes), { [noteId]: Object.assign(Object.assign({}, state.notes[noteId]), { isUpdating }) }) });
            break;
        case action_types_1.default.SET_IS_REQUESTING:
            state = Object.assign(Object.assign({}, state), { requesting: Object.assign(Object.assign({}, state.requesting), { [selector]: isRequesting }) });
            break;
    }
    return state;
};
exports.default = notesReducer;
