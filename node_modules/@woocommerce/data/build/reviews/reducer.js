"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Internal dependencies
 */
const action_types_1 = __importDefault(require("./action-types"));
const reducer = (state = {
    reviews: {},
    errors: {},
    data: {},
}, { type, query, reviews, reviewId, reviewData, totalCount, error, isUpdating, }) => {
    switch (type) {
        case action_types_1.default.UPDATE_REVIEWS:
            const ids = [];
            const nextReviews = reviews.reduce((result, review) => {
                ids.push(review.id);
                result[review.id] = Object.assign(Object.assign({}, (state.data[review.id] || {})), review);
                return result;
            }, {});
            return Object.assign(Object.assign({}, state), { reviews: Object.assign(Object.assign({}, state.reviews), { [JSON.stringify(query)]: { data: ids, totalCount } }), data: Object.assign(Object.assign({}, state.data), nextReviews) });
        case action_types_1.default.SET_REVIEW:
            return Object.assign(Object.assign({}, state), { data: Object.assign(Object.assign({}, state.data), { [reviewId]: reviewData }) });
        case action_types_1.default.SET_ERROR:
            return Object.assign(Object.assign({}, state), { errors: Object.assign(Object.assign({}, state.errors), { [JSON.stringify(query)]: error }) });
        case action_types_1.default.SET_REVIEW_IS_UPDATING:
            return Object.assign(Object.assign({}, state), { data: Object.assign(Object.assign({}, state.data), { [reviewId]: Object.assign(Object.assign({}, state.data[reviewId]), { isUpdating }) }) });
        default:
            return state;
    }
};
exports.default = reducer;
