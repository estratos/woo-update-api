/**
 * External dependencies
 */
import { apiFetch } from '@wordpress/data-controls';
/**
 * Internal dependencies
 */
import { getItemError, getItemSuccess, getItemsError, getItemsSuccess, } from './actions';
import { request } from '../utils';
export const createResolvers = ({ resourceName, pluralResourceName, namespace, }) => {
    const getItem = function* (id) {
        try {
            const item = yield apiFetch({
                path: `${namespace}/${id}`,
                method: 'GET',
            });
            yield getItemSuccess(item.id, item);
            return item;
        }
        catch (error) {
            yield getItemError(id, error);
            throw error;
        }
    };
    const getItems = function* (query) {
        // Require ID when requesting specific fields to later update the resource data.
        const resourceQuery = { ...query };
        if (resourceQuery &&
            resourceQuery._fields &&
            !resourceQuery._fields.includes('id')) {
            resourceQuery._fields = ['id', ...resourceQuery._fields];
        }
        try {
            const { items } = yield request(namespace, resourceQuery);
            yield getItemsSuccess(query, items);
            return items;
        }
        catch (error) {
            yield getItemsError(query, error);
            throw error;
        }
    };
    return {
        [`get${resourceName}`]: getItem,
        [`get${pluralResourceName}`]: getItems,
    };
};
