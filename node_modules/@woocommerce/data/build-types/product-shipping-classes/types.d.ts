/**
 * External dependencies
 */
import { DispatchFromMap } from '@automattic/data-stores';
/**
 * Internal dependencies
 */
import { CrudActions, CrudSelectors } from '../crud/types';
import { BaseQueryParams } from '../types';
declare type ProductShippingClass = {
    id: number;
    slug: string;
    name: string;
    description: string;
    count: number;
};
declare type Query = BaseQueryParams<keyof ProductShippingClass> & {
    context?: string;
    hide_empty?: boolean;
    slug?: string;
    product?: number;
};
declare type ReadOnlyProperties = 'id';
declare type MutableProperties = Partial<Omit<ProductShippingClass, ReadOnlyProperties>>;
declare type ProductShippingClassActions = CrudActions<'ProductShippingClass', ProductShippingClass, MutableProperties>;
export declare type ProductShippingClassSelectors = CrudSelectors<'ProductShippingClass', 'ProductShippingClasses', ProductShippingClass, Query, MutableProperties>;
export declare type ActionDispatchers = DispatchFromMap<ProductShippingClassActions>;
export {};
//# sourceMappingURL=types.d.ts.map