import { Order, OrdersQuery } from './types';
export declare function getOrders(query: Partial<OrdersQuery>): Generator<{
    type: import("./action-types").TYPES.GET_ORDERS_SUCCESS;
    orders: import("./types").PartialOrder[];
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    totalCount: number;
} | {
    type: import("./action-types").TYPES.GET_ORDERS_ERROR;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    error: unknown;
} | {
    type: import("./action-types").TYPES.GET_ORDERS_TOTAL_COUNT_SUCCESS;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    totalCount: number;
} | Generator<unknown, {
    items: Order<import("./types").OrderStatus>[];
    totalCount: number;
} | undefined, Order<import("./types").OrderStatus>[] | ({
    data: Order<import("./types").OrderStatus>[];
} & Response)>, unknown, {
    items: Order[];
    totalCount: number;
}>;
export declare function getOrdersTotalCount(query: Partial<OrdersQuery>): Generator<{
    type: import("./action-types").TYPES.GET_ORDERS_TOTAL_COUNT_SUCCESS;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    totalCount: number;
} | {
    type: import("./action-types").TYPES.GET_ORDERS_TOTAL_COUNT_ERROR;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    error: unknown;
} | Generator<unknown, {
    items: Order<import("./types").OrderStatus>[];
    totalCount: number;
} | undefined, Order<import("./types").OrderStatus>[] | ({
    data: Order<import("./types").OrderStatus>[];
} & Response)>, any, {
    totalCount: any;
}>;
//# sourceMappingURL=resolvers.d.ts.map