/**
 * Internal dependencies
 */
import TYPES from './action-types';
import { PartialOrder, OrdersQuery } from './types';
export declare function getOrderSuccess(id: number, order: PartialOrder): {
    type: TYPES.GET_ORDER_SUCCESS;
    id: number;
    order: PartialOrder;
};
export declare function getOrderError(query: Partial<OrdersQuery>, error: unknown): {
    type: TYPES.GET_ORDER_ERROR;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    error: unknown;
};
export declare function getOrdersSuccess(query: Partial<OrdersQuery>, orders: PartialOrder[], totalCount: number): {
    type: TYPES.GET_ORDERS_SUCCESS;
    orders: PartialOrder[];
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    totalCount: number;
};
export declare function getOrdersError(query: Partial<OrdersQuery>, error: unknown): {
    type: TYPES.GET_ORDERS_ERROR;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    error: unknown;
};
export declare function getOrdersTotalCountSuccess(query: Partial<OrdersQuery>, totalCount: number): {
    type: TYPES.GET_ORDERS_TOTAL_COUNT_SUCCESS;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    totalCount: number;
};
export declare function getOrdersTotalCountError(query: Partial<OrdersQuery>, error: unknown): {
    type: TYPES.GET_ORDERS_TOTAL_COUNT_ERROR;
    query: Partial<OrdersQuery<"processing" | "on-hold" | "completed" | "pending" | "any" | "trash" | "cancelled" | "refunded" | "failed">>;
    error: unknown;
};
export declare type Actions = ReturnType<typeof getOrderSuccess | typeof getOrderError | typeof getOrdersSuccess | typeof getOrdersError | typeof getOrdersTotalCountSuccess | typeof getOrdersTotalCountError>;
//# sourceMappingURL=actions.d.ts.map