declare type SchedulerName = 'orders' | 'customers';
declare type isImporting = {
    is_importing: boolean;
};
declare type SchedulerImportStatus = {
    [schedulerName in SchedulerName]: {
        imported: number;
        totals: number;
    };
} & {
    imported_from?: string | number;
};
export declare type ImportStatus = isImporting | (isImporting & SchedulerImportStatus);
export declare type ImportStatusQuery = number;
export declare type ImportTotals = {
    [schedulerName in SchedulerName]: number;
};
export declare type ImportTotalsQuery = {
    skip_existing: boolean;
    days: number;
};
export declare type ImportState = {
    activeImport: boolean;
    importStatus: Record<string, never> | {
        [queryString: string]: ImportStatus;
    };
    importTotals: Record<string, never> | {
        [queryString: string]: ImportTotals;
    };
    errors: {
        [queryString: string]: unknown;
    };
    lastImportStartTimestamp: number;
    period: {
        date: string;
        label: string;
    };
    skipPrevious: boolean;
};
export {};
//# sourceMappingURL=types.d.ts.map