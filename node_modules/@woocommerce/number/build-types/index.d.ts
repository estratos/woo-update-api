/**
 * Number formatting configuration object
 *
 * @typedef {Object} NumberConfig
 * @property {number|string|null} [precision]         Decimal precision.
 * @property {string}             [decimalSeparator]  Decimal separator.
 * @property {string}             [thousandSeparator] Character used to separate thousands groups.
 */
export declare type NumberConfig = {
    precision: number | string | null;
    decimalSeparator: string;
    thousandSeparator: string;
};
/**
 * Formats a number using site's current locale
 *
 * @see http://locutus.io/php/strings/number_format/
 * @param {NumberConfig}  numberConfig Number formatting configuration object.
 * @param {number|string} number       number to format
 * @return {string} A formatted string.
 */
export declare function numberFormat({ precision, decimalSeparator, thousandSeparator, }: Partial<NumberConfig>, number?: number | string): string;
/**
 * Formats a number as average or number string according to the given `type`.
 *  - `type = 'average'` returns a rounded `Number`
 *  - `type = 'number'` returns a formatted `String`
 *
 * @param {NumberConfig} numberConfig number formatting configuration object.
 * @param {string}       type         of number to format, `'average'` or `'number'`
 * @param {number}       value        to format.
 * @return {string | number | null} A formatted string.
 */
export declare function formatValue(numberConfig: NumberConfig, type: string, value: number): string | number | null;
/**
 * Calculates the delta/percentage change between two numbers.
 *
 * @param {number} primaryValue   the value to calculate change for.
 * @param {number} secondaryValue the baseline which to calculdate the change against.
 * @return {?number} Percent change between the primaryValue from the secondaryValue.
 */
export declare function calculateDelta(primaryValue: number, secondaryValue: number): number | null;
//# sourceMappingURL=index.d.ts.map