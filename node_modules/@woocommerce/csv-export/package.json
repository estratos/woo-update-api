{
  "name": "@woocommerce/csv-export",
  "version": "1.7.0",
  "description": "WooCommerce utility library to convert data to CSV files.",
  "author": "Automattic",
  "license": "GPL-3.0-or-later",
  "keywords": [
    "wordpress",
    "woocommerce",
    "csv"
  ],
  "homepage": "https://github.com/woocommerce/woocommerce/tree/trunk/packages/js/csv-export/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/woocommerce/woocommerce.git"
  },
  "bugs": {
    "url": "https://github.com/woocommerce/woocommerce/issues"
  },
  "main": "build/index.js",
  "module": "build-module/index.js",
  "types": "build-types",
  "react-native": "src/index",
  "dependencies": {
    "browser-filesaver": "^1.1.1",
    "moment": "^2.29.1"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@babel/core": "^7.17.5",
    "@woocommerce/eslint-plugin": "2.2.0",
    "eslint": "^8.12.0",
    "jest": "^27.5.1",
    "jest-cli": "^27.5.1",
    "require-turbo": "0.0.0",
    "rimraf": "^3.0.2",
    "ts-jest": "^27.1.3",
    "typescript": "^4.6.2"
  },
  "lint-staged": {
    "*.(t|j)s?(x)": [
      "pnpm lint:fix",
      "pnpm test-staged"
    ]
  },
  "scripts": {
    "changelog": "composer exec -- changelogger",
    "clean": "pnpm exec rimraf tsconfig.tsbuildinfo build build-*",
    "build": "node ./node_modules/require-turbo && tsc --build ./tsconfig.json ./tsconfig-cjs.json",
    "start": "tsc --build --watch",
    "lint": "node ./node_modules/require-turbo && eslint src",
    "lint:fix": "eslint src --fix",
    "test": "node ./node_modules/require-turbo && jest --config ./jest.config.json",
    "test-staged": "jest --bail --config ./jest.config.json --findRelatedTests"
  },
  "readme": "# CSV Export\n\nA set of functions to convert data into CSV values, and enable a browser download of the CSV data.\n\n## Installation\n\nInstall the module\n\n```bash\npnpm install @woocommerce/csv-export --save\n```\n\n## Usage\n\n```js\nonClick = () => {\n\t// Create a file name based on a title and optional query. Will return a timestamped\n\t// name, for example: revenue-2018-11-01-interval-month.csv\n\tconst name = generateCSVFileName( 'revenue', { interval: 'month' } );\n\n\t// Create a string of CSV data, `headers` is an array of row headers, put at the top\n\t// of the file. `rows` is a 2 dimensional array. Each array is a line in the file,\n\t// separated by newlines. The second-level arrays are the data points in each row.\n\t// For header format, see https://woocommerce.github.io/woocommerce-admin/#/components/table?id=headers-2\n\t// For rows format, see https://woocommerce.github.io/woocommerce-admin/#/components/table?id=rows-1\n\tconst data = generateCSVDataFromTable( headers, rows );\n\n\t// Triggers a browser UI to save a file, named the first argument, with the contents of\n\t// the second argument.\n\tdownloadCSVFile( name, data );\n}\n```\n\n### generateCSVDataFromTable(headers, rows) ⇒ <code>String</code>\nGenerates a CSV string from table contents\n\n**Returns**: <code>String</code> - Table contents in a CSV format\n\n| Param | Type | Description |\n| --- | --- | --- |\n| headers | <code>Array.&lt;Object&gt;</code> | Object with table header information |\n| rows | <code>Array.Array.&lt;Object&gt;</code> | Object with table rows information |\n\n### generateCSVFileName([name], [params]) ⇒ <code>String</code>\nGenerates a file name for CSV files based on the provided name, the current date\nand the provided params, which are all appended with hyphens.\n\n**Returns**: <code>String</code> - Formatted file name\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [name] | <code>String</code> | <code>&#x27;&#x27;</code> | Name of the file |\n| [params] | <code>Object</code> | <code>{}</code> | Object of key-values to append to the file name |\n\n### downloadCSVFile(fileName, content)\nDownloads a CSV file with the given file name and contents\n\n| Param | Type | Description |\n| --- | --- | --- |\n| fileName | <code>String</code> | Name of the file to download |\n| content | <code>String</code> | Contents of the file to download |\n"
}