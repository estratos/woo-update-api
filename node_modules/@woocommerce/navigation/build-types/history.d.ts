/**
 * External dependencies
 */
import { BrowserHistory, Location } from 'history';
/**
 * Extension of history.BrowserHistory but also adds { pathname: string } to the location object.
 */
export interface WooBrowserHistory extends BrowserHistory {
    location: Location & {
        pathname: string;
    };
}
/**
 * Recreate `history` to coerce React Router into accepting path arguments found in query
 * parameter `path`, allowing a url hash to be avoided. Since hash portions of the url are
 * not sent server side, full route information can be detected by the server.
 *
 * `<Router />` and `<Switch />` components use `history.location()` to match a url with a route.
 * Since they don't parse query arguments, recreate `get location` to return a `pathname` with the
 * query path argument's value.
 *
 * In react-router v6, { basename } is no longer a parameter in createBrowserHistory(), and the
 * replacement is to use basename in the <Route> component.
 *
 * @return {Object} React-router history object with `get location` modified.
 */
declare function getHistory(): WooBrowserHistory;
export { getHistory };
//# sourceMappingURL=history.d.ts.map