/**
 * External dependencies
 */
import { withViewportMatch } from '@wordpress/viewport';
import { Card, CardBody, CardFooter, CardHeader } from '@wordpress/components';
import { createElement, useEffect } from '@wordpress/element';
/**
 * Internal dependencies
 */
import StepNavigation from './step-navigation';
import StepControls from './step-controls';
const getFocusElement = (focusElementSelector, iframeSelector) => {
    if (!focusElementSelector) {
        return null;
    }
    if (iframeSelector) {
        const iframeElement = document.querySelector(iframeSelector);
        if (!iframeElement) {
            return null;
        }
        const innerDoc = iframeElement.contentDocument ||
            (iframeElement.contentWindow &&
                iframeElement.contentWindow.document);
        if (!innerDoc) {
            return null;
        }
        return innerDoc.querySelector(focusElementSelector);
    }
    return document.querySelector(focusElementSelector);
};
const Step = ({ steps, currentStepIndex, onDismiss, onNextStep, onPreviousStep, setInitialFocusedElement, onGoToStep, isViewportMobile, }) => {
    var _a, _b, _c;
    const { descriptions, heading } = steps[currentStepIndex].meta;
    const description = (_a = descriptions[isViewportMobile ? 'mobile' : 'desktop']) !== null && _a !== void 0 ? _a : descriptions.desktop;
    const focusElementSelector = ((_b = steps[currentStepIndex].focusElement) === null || _b === void 0 ? void 0 : _b[isViewportMobile ? 'mobile' : 'desktop']) || null;
    const iframeSelector = ((_c = steps[currentStepIndex].focusElement) === null || _c === void 0 ? void 0 : _c.iframe) || null;
    const focusElement = getFocusElement(focusElementSelector, iframeSelector);
    /*
     * Focus the element when step renders.
     */
    useEffect(() => {
        if (focusElement) {
            setInitialFocusedElement(focusElement);
        }
    }, [focusElement, setInitialFocusedElement]);
    return (createElement(Card, { className: "woocommerce-tour-kit-step", isElevated: true },
        createElement(CardHeader, { isBorderless: true, size: "small" },
            createElement(StepControls, { onDismiss: onDismiss })),
        createElement(CardBody, { className: "woocommerce-tour-kit-step__body", size: "small" },
            createElement("h2", { className: "woocommerce-tour-kit-step__heading" }, heading),
            createElement("p", { className: "woocommerce-tour-kit-step__description" }, description)),
        createElement(CardFooter, { isBorderless: true, size: "small" },
            createElement(StepNavigation, { currentStepIndex: currentStepIndex, onGoToStep: onGoToStep, onNextStep: onNextStep, onPreviousStep: onPreviousStep, onDismiss: onDismiss, steps: steps }))));
};
export default withViewportMatch({
    isViewportMobile: '< medium',
})(Step);
