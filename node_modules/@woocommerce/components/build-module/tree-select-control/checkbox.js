/**
 * External dependencies
 */
import { Icon, check } from '@wordpress/icons';
import { createElement } from '@wordpress/element';
/**
 * @typedef {import('./index').Option} Option
 */
/**
 * Renders a custom Checkbox
 *
 * @param {Object}  props           Component properties
 * @param {Option}  props.option    Option for the checkbox
 * @param {string}  props.className The className for the component
 * @param {boolean} props.checked   Defines if the checkbox is checked
 * @return {JSX.Element|null} The Checkbox component
 */
const Checkbox = ({ option, checked, className, ...props }) => {
    var _a, _b;
    return (createElement("div", { className: className },
        createElement("div", { className: "components-base-control__field" },
            createElement("span", { className: "components-checkbox-control__input-container" },
                createElement("input", { id: `inspector-checkbox-control-${(_a = option.key) !== null && _a !== void 0 ? _a : option.value}`, className: "components-checkbox-control__input", type: "checkbox", tabIndex: "-1", value: option.value, checked: checked, ...props }),
                checked && (createElement(Icon, { icon: check, role: "presentation", className: "components-checkbox-control__checked" }))),
            createElement("label", { className: "components-checkbox-control__label", htmlFor: `inspector-checkbox-control-${(_b = option.key) !== null && _b !== void 0 ? _b : option.value}` }, option.label))));
};
export default Checkbox;
