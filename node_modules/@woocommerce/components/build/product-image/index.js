"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * External dependencies
 */
const classnames_1 = __importDefault(require("classnames"));
const prop_types_1 = __importDefault(require("prop-types"));
const lodash_1 = require("lodash");
const element_1 = require("@wordpress/element");
/**
 * Internal dependencies
 */
const placeholder_1 = require("./placeholder");
/**
 * Use `ProductImage` to display a product's or variation's featured image.
 * If no image can be found, a placeholder matching the front-end image
 * placeholder will be displayed.
 *
 * @param {Object} props
 * @param {Object} props.product
 * @param {string} props.alt
 * @param {number} props.width
 * @param {number} props.height
 * @param {string} props.className
 * @return {Object} -
 */
const ProductImage = (_a) => {
    var { product, alt, width, height, className } = _a, props = __rest(_a, ["product", "alt", "width", "height", "className"]);
    // The first returned image from the API is the featured/product image.
    const productImage = (0, lodash_1.get)(product, ['images', 0]) || (0, lodash_1.get)(product, ['image']);
    const src = (productImage && productImage.src) || false;
    const altText = alt || (productImage && productImage.alt) || '';
    const classes = (0, classnames_1.default)('woocommerce-product-image', className, {
        'is-placeholder': !src,
    });
    return ((0, element_1.createElement)("img", Object.assign({ className: classes, src: src || placeholder_1.placeholderWhiteBackground, width: width, height: height, alt: altText }, props)));
};
ProductImage.propTypes = {
    /**
     * The width of image to display.
     */
    width: prop_types_1.default.number,
    /**
     * The height of image to display.
     */
    height: prop_types_1.default.number,
    /**
     * Additional CSS classes.
     */
    className: prop_types_1.default.string,
    /**
     * Product or variation object. The image to display will be pulled from
     * `product.images` or `variation.image`.
     * See https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * and https://woocommerce.github.io/woocommerce-rest-api-docs/#product-variation-properties
     */
    product: prop_types_1.default.object,
    /**
     * Text to use as the image alt attribute.
     */
    alt: prop_types_1.default.string,
};
ProductImage.defaultProps = {
    width: 33,
    height: 33,
    className: '',
};
exports.default = ProductImage;
