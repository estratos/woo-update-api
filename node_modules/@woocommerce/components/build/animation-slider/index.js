"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * External dependencies
 */
const element_1 = require("@wordpress/element");
const classnames_1 = __importDefault(require("classnames"));
const react_transition_group_1 = require("react-transition-group");
const prop_types_1 = __importDefault(require("prop-types"));
/**
 * This component creates slideable content controlled by an animate prop to direct the contents to slide left or right.
 * All other props are passed to `CSSTransition`. More info at http://reactcommunity.org/react-transition-group/css-transition
 */
class AnimationSlider extends element_1.Component {
    constructor() {
        super();
        this.state = {
            animate: null,
        };
        this.container = (0, element_1.createRef)();
        this.onExited = this.onExited.bind(this);
    }
    onExited() {
        const { onExited } = this.props;
        if (onExited) {
            onExited(this.container.current);
        }
    }
    render() {
        const { children, animationKey, animate } = this.props;
        const containerClasses = (0, classnames_1.default)('woocommerce-slide-animation', animate && `animate-${animate}`);
        return ((0, element_1.createElement)("div", { className: containerClasses, ref: this.container },
            (0, element_1.createElement)(react_transition_group_1.TransitionGroup, null,
                (0, element_1.createElement)(react_transition_group_1.CSSTransition, Object.assign({ timeout: 200, classNames: "slide", key: animationKey }, this.props, { onExited: this.onExited }), (status) => children({ status })))));
    }
}
AnimationSlider.propTypes = {
    /**
     * A function returning rendered content with argument status, reflecting `CSSTransition` status.
     */
    children: prop_types_1.default.func.isRequired,
    /**
     * A unique identifier for each slideable page.
     */
    animationKey: prop_types_1.default.any.isRequired,
    /**
     * null, 'left', 'right', to designate which direction to slide on a change.
     */
    animate: prop_types_1.default.oneOf([null, 'left', 'right']),
    /**
     * A function to be executed after a transition is complete, passing the containing ref as the argument.
     */
    onExited: prop_types_1.default.func,
};
exports.default = AnimationSlider;
