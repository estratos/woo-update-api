"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * External dependencies
 */
const element_1 = require("@wordpress/element");
const components_1 = require("@wordpress/components");
const i18n_1 = require("@wordpress/i18n");
const classnames_1 = __importDefault(require("classnames"));
const icons_1 = require("@wordpress/icons");
class ImageUpload extends element_1.Component {
    constructor() {
        super(...arguments);
        this.state = {
            frame: false,
        };
        this.openModal = this.openModal.bind(this);
        this.handleImageSelect = this.handleImageSelect.bind(this);
        this.removeImage = this.removeImage.bind(this);
    }
    openModal() {
        if (this.state.frame) {
            this.state.frame.open();
            return;
        }
        const frame = wp.media({
            title: (0, i18n_1.__)('Select or upload image', 'woocommerce'),
            button: {
                text: (0, i18n_1.__)('Select', 'woocommerce'),
            },
            library: {
                type: 'image',
            },
            multiple: false,
        });
        frame.on('select', this.handleImageSelect);
        frame.open();
        this.setState({ frame });
    }
    handleImageSelect() {
        const { onChange } = this.props;
        const attachment = this.state.frame
            .state()
            .get('selection')
            .first()
            .toJSON();
        onChange(attachment);
    }
    removeImage() {
        const { onChange } = this.props;
        onChange(null);
    }
    render() {
        const { className, image } = this.props;
        return ((0, element_1.createElement)(element_1.Fragment, null,
            !!image && ((0, element_1.createElement)("div", { className: (0, classnames_1.default)('woocommerce-image-upload', 'has-image', className) },
                (0, element_1.createElement)("div", { className: "woocommerce-image-upload__image-preview" },
                    (0, element_1.createElement)("img", { src: image.url, alt: "" })),
                (0, element_1.createElement)(components_1.Button, { isSecondary: true, className: "woocommerce-image-upload__remove-image", onClick: this.removeImage }, (0, i18n_1.__)('Remove image', 'woocommerce')))),
            !image && ((0, element_1.createElement)("div", { className: (0, classnames_1.default)('woocommerce-image-upload', 'no-image', className) },
                (0, element_1.createElement)(components_1.Button, { className: "woocommerce-image-upload__add-image", onClick: this.openModal, isSecondary: true },
                    (0, element_1.createElement)(icons_1.Icon, { icon: icons_1.upload }),
                    (0, i18n_1.__)('Add an image', 'woocommerce'))))));
    }
}
exports.default = ImageUpload;
