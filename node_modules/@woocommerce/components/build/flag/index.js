"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * External dependencies
 */
const classnames_1 = __importDefault(require("classnames"));
const prop_types_1 = __importDefault(require("prop-types"));
const emoji_flags_1 = __importDefault(require("emoji-flags"));
const lodash_1 = require("lodash");
const element_1 = require("@wordpress/element");
/**
 * Use the `Flag` component to display a country's flag using the operating system's emojis.
 *
 * @param {Object}  props
 * @param {string}  props.code
 * @param {Object}  props.order
 * @param {string}  props.className
 * @param {string}  props.size
 * @param {boolean} props.hideFromScreenReader
 * @return {Object} - React component.
 */
const Flag = ({ code, order, className, size, hideFromScreenReader }) => {
    const classes = (0, classnames_1.default)('woocommerce-flag', className);
    let _code = code || 'unknown';
    if (order && order.shipping && order.shipping.country) {
        _code = order.shipping.country;
    }
    else if (order && order.billing && order.billing.country) {
        _code = order.billing.country;
    }
    const inlineStyles = {
        fontSize: size,
    };
    const emoji = (0, lodash_1.get)(emoji_flags_1.default.countryCode(_code), 'emoji');
    return ((0, element_1.createElement)("div", { className: classes, style: inlineStyles, "aria-hidden": hideFromScreenReader },
        emoji && (0, element_1.createElement)("span", null, emoji),
        !emoji && ((0, element_1.createElement)("span", { className: "woocommerce-flag__fallback" }, "Invalid country flag"))));
};
Flag.propTypes = {
    /**
     * Two letter, three letter or three digit country code.
     */
    code: prop_types_1.default.string,
    /**
     * An order can be passed instead of `code` and the code will automatically be pulled from the billing or shipping data.
     */
    order: prop_types_1.default.object,
    /**
     * Additional CSS classes.
     */
    className: prop_types_1.default.string,
    /**
     * Supply a font size to be applied to the emoji flag.
     */
    size: prop_types_1.default.number,
};
exports.default = Flag;
