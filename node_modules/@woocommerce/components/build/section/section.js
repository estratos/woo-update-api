"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Section = void 0;
/**
 * External dependencies
 */
const prop_types_1 = __importDefault(require("prop-types"));
const element_1 = require("@wordpress/element");
/**
 * Internal dependencies
 */
const context_1 = require("./context");
/**
 * The section wrapper, used to indicate a sub-section (and change the header level context).
 *
 * @param {Object}                         props
 * @param {import('react').ComponentType=} props.component
 * @param {import('react').ReactNode}      props.children  Children to render in the tip.
 * @param {string=}                        props.className
 * @return {JSX.Element} -
 */
function Section(_a) {
    var { component, children } = _a, props = __rest(_a, ["component", "children"]);
    const Component = component || 'div';
    return ((0, element_1.createElement)(context_1.Level.Consumer, null, (level) => ((0, element_1.createElement)(context_1.Level.Provider, { value: level + 1 }, component === false ? (children) : ((0, element_1.createElement)(Component, Object.assign({}, props), children))))));
}
exports.Section = Section;
Section.propTypes = {
    /**
     * The wrapper component for this section. Optional, defaults to `div`. If passed false, no wrapper is used. Additional props
     * passed to Section are passed on to the component.
     */
    component: prop_types_1.default.oneOfType([
        prop_types_1.default.func,
        prop_types_1.default.string,
        prop_types_1.default.bool,
    ]),
    /**
     * The children inside this section, rendered in the `component`. This increases the context level for the next heading used.
     */
    children: prop_types_1.default.node,
    /**
     * Optional classname
     */
    className: prop_types_1.default.string,
};
