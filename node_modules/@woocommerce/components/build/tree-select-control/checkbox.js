"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * External dependencies
 */
const icons_1 = require("@wordpress/icons");
const element_1 = require("@wordpress/element");
/**
 * @typedef {import('./index').Option} Option
 */
/**
 * Renders a custom Checkbox
 *
 * @param {Object}  props           Component properties
 * @param {Option}  props.option    Option for the checkbox
 * @param {string}  props.className The className for the component
 * @param {boolean} props.checked   Defines if the checkbox is checked
 * @return {JSX.Element|null} The Checkbox component
 */
const Checkbox = (_a) => {
    var _b, _c;
    var { option, checked, className } = _a, props = __rest(_a, ["option", "checked", "className"]);
    return ((0, element_1.createElement)("div", { className: className },
        (0, element_1.createElement)("div", { className: "components-base-control__field" },
            (0, element_1.createElement)("span", { className: "components-checkbox-control__input-container" },
                (0, element_1.createElement)("input", Object.assign({ id: `inspector-checkbox-control-${(_b = option.key) !== null && _b !== void 0 ? _b : option.value}`, className: "components-checkbox-control__input", type: "checkbox", tabIndex: "-1", value: option.value, checked: checked }, props)),
                checked && ((0, element_1.createElement)(icons_1.Icon, { icon: icons_1.check, role: "presentation", className: "components-checkbox-control__checked" }))),
            (0, element_1.createElement)("label", { className: "components-checkbox-control__label", htmlFor: `inspector-checkbox-control-${(_c = option.key) !== null && _c !== void 0 ? _c : option.value}` }, option.label))));
};
exports.default = Checkbox;
