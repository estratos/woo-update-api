{
  "name": "@woocommerce/dependency-extraction-webpack-plugin",
  "version": "2.2.0",
  "description": "WooCommerce Dependency Extraction Webpack Plugin",
  "author": "Automattic",
  "license": "GPL-2.0-or-later",
  "keywords": [
    "wordpress",
    "woocommerce"
  ],
  "homepage": "https://github.com/woocommerce/woocommerce/tree/trunk/packages/js/dependency-extraction-webpack-plugin/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/woocommerce/woocommerce.git"
  },
  "bugs": {
    "url": "https://github.com/woocommerce/woocommerce/issues"
  },
  "main": "src/index.js",
  "dependencies": {
    "@wordpress/dependency-extraction-webpack-plugin": "^3.3.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@babel/core": "^7.17.5",
    "@woocommerce/eslint-plugin": "2.2.0",
    "eslint": "^8.12.0",
    "jest": "^27.5.1",
    "jest-cli": "^27.5.1",
    "require-turbo": "0.0.0",
    "rimraf": "^3.0.2",
    "ts-jest": "^27.1.3",
    "typescript": "^4.6.2",
    "webpack": "^5.70.0",
    "webpack-cli": "^3.3.12"
  },
  "lint-staged": {
    "*.(t|j)s?(x)": [
      "eslint --fix"
    ]
  },
  "scripts": {
    "changelog": "composer exec -- changelogger",
    "lint": "node ./node_modules/require-turbo && eslint src",
    "lint:fix": "eslint src --fix"
  },
  "readme": "# Dependency Extraction Webpack Plugin\n\nExtends Wordpress [Dependency Extraction Webpack Plugin](https://github.com/WordPress/gutenberg/tree/master/packages/dependency-extraction-webpack-plugin) to automatically include WooCommerce dependencies in addition to WordPress dependencies.\n\n## Installation\n\nInstall the module\n\n```\npnpm install @woocommerce/dependency-extraction-webpack-plugin --save-dev\n```\n\n## Usage\n\nUse this as you would [Dependency Extraction Webpack Plugin](https://github.com/WordPress/gutenberg/tree/master/packages/dependency-extraction-webpack-plugin). The API is exactly the same, except that WooCommerce packages are also handled automatically.\n\n```js\n// webpack.config.js\nconst WooCommerceDependencyExtractionWebpackPlugin = require( '@woocommerce/dependency-extraction-webpack-plugin' );\n\nmodule.exports = {\n\t// â€¦snip\n\tplugins: [ new WooCommerceDependencyExtractionWebpackPlugin() ],\n};\n```\n\nAdditional module requests on top of Wordpress [Dependency Extraction Webpack Plugin](https://github.com/WordPress/gutenberg/tree/master/packages/dependency-extraction-webpack-plugin) are:\n\n| Request                        | Global                   | Script handle          | Notes                                                   |\n| ------------------------------ | ------------------------ | ---------------------- | --------------------------------------------------------|\n| `@woocommerce/data`            | `wc['data']`             | `wc-store-data`        | |\n| `@woocommerce/csv-export`      | `wc['csvExport']`        | `wc-csv`               | |\n| `@woocommerce/blocks-registry` | `wc['wcBlocksRegistry']` | `wc-blocks-registry`   | |\n| `@woocommerce/block-data`      | `wc['wcBlocksData']`     | `wc-blocks-data-store` | This dependency does not have an associated npm package |\n| `@woocommerce/settings`        | `wc['wcSettings']`       | `wc-settings`          | |\n| `@woocommerce/*`               | `wc['*']`                | `wc-*`                 | |\n\n#### Options\n\nAn object can be passed to the constructor to customize the behavior, for example:\n\n```js\nmodule.exports = {\n\tplugins: [\n\t\tnew WooCommerceDependencyExtractionWebpackPlugin( {\n\t\t\tbundledPackages: [ '@woocommerce/components' ],\n\t\t} ),\n\t],\n};\n```\n\n##### `bundledPackages`\n\n-   Type: array\n-   Default: []\n\nA list of potential WooCommerce excluded packages, this will include the excluded package within the bundle (example above).\n\nFor more supported options see the original [dependency extraction plugin](https://github.com/WordPress/gutenberg/blob/trunk/packages/dependency-extraction-webpack-plugin/README.md#options).\n"
}