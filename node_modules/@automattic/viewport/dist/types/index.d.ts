export declare const MOBILE_BREAKPOINT = "<480px";
export declare const DESKTOP_BREAKPOINT = ">960px";
export declare type QueryItem = false | MinimalMediaQueryList | MediaQueryList;
export declare type ListenerCallback = (matches: boolean) => void;
export declare type UnsubcribeCallback = () => void;
export declare type MinimalMediaQueryList = {
    matches: boolean;
    addListener: MediaQueryList['addListener'];
    removeListener: MediaQueryList['removeListener'];
};
export declare function getMediaQueryList(breakpoint: string): undefined | QueryItem;
/**
 * Returns whether the current window width matches a breakpoint.
 *
 * @param {string} breakpoint The breakpoint to consider.
 * @returns {boolean|undefined} Whether the provided breakpoint is matched.
 */
export declare function isWithinBreakpoint(breakpoint: string): boolean | undefined;
/**
 * Registers a listener to be notified of changes to breakpoint matching status.
 *
 * @param {string} breakpoint The breakpoint to consider.
 * @param {Function} listener The listener to be called on change.
 * @returns {Function} The function to be called when unsubscribing.
 */
export declare function subscribeIsWithinBreakpoint(breakpoint: string, listener: ListenerCallback): UnsubcribeCallback;
/**
 * Returns whether the current window width matches the mobile breakpoint.
 *
 * @returns {boolean|undefined} Whether the mobile breakpoint is matched.
 */
export declare function isMobile(): boolean | undefined;
/**
 * Registers a listener to be notified of changes to mobile breakpoint matching status.
 *
 * @param {Function} listener The listener to be called on change.
 * @returns {Function} The registered subscription; undefined if none.
 */
export declare function subscribeIsMobile(listener: ListenerCallback): UnsubcribeCallback;
/**
 * Returns whether the current window width matches the desktop breakpoint.
 *
 * @returns {boolean|undefined} Whether the desktop breakpoint is matched.
 */
export declare function isDesktop(): boolean | undefined;
/**
 * Registers a listener to be notified of changes to desktop breakpoint matching status.
 *
 * @param {Function} listener The listener to be called on change.
 * @returns {Function} The registered subscription; undefined if none.
 */
export declare function subscribeIsDesktop(listener: ListenerCallback): UnsubcribeCallback;
/**
 * Returns the current window width.
 * Avoid using this method, as it triggers a layout recalc.
 *
 * @returns {number} The current window width, in pixels.
 */
export declare function getWindowInnerWidth(): number;
/******************************************/
/******************************************/
export declare function isTabletResolution(): boolean;
export declare const DEVICE_MOBILE = "mobile";
export declare const DEVICE_TABLET = "tablet";
export declare const DEVICE_DESKTOP = "desktop";
export declare function resolveDeviceTypeByViewPort(): string;
/******************************************/
//# sourceMappingURL=index.d.ts.map