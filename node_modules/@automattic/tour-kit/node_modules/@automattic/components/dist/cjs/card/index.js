"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = require("react");
const gridicon_1 = tslib_1.__importDefault(require("../gridicon"));
require("./style.scss");
const Card = ({ children, className, compact, displayAsLink, highlight, tagName = 'div', href, target, showLinkIcon = true, ...props }, forwardedRef // eslint-disable-line @typescript-eslint/no-explicit-any
) => {
    const elementClass = (0, clsx_1.default)('card', className, {
        'is-card-link': displayAsLink || href,
        'is-clickable': props.onClick,
        'is-compact': compact,
        'is-highlight': highlight,
    }, highlight ? 'is-' + highlight : false);
    return href ? ((0, jsx_runtime_1.jsxs)("a", { ...props, href: href, target: target, className: elementClass, ref: forwardedRef, children: [showLinkIcon && ((0, jsx_runtime_1.jsx)(gridicon_1.default, { className: "card__link-indicator", icon: target ? 'external' : 'chevron-right' })), children] })) : ((0, react_1.createElement)(tagName, { ...props, className: elementClass, ref: forwardedRef }, displayAsLink && ((0, jsx_runtime_1.jsx)(gridicon_1.default, { className: "card__link-indicator", icon: target ? 'external' : 'chevron-right' })), children));
};
const ForwardedRefCard = (0, react_1.forwardRef)(Card);
ForwardedRefCard.displayName = 'Card';
exports.default = (0, react_1.memo)(ForwardedRefCard);
//# sourceMappingURL=index.js.map