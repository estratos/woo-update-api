"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const material_icons_svg_1 = tslib_1.__importDefault(require("@automattic/material-design-icons/svg-sprite/material-icons.svg"));
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const React = tslib_1.__importStar(require("react"));
function MaterialIcon(props) {
    const { size = 24, style = 'outline', icon, onClick, className, ...otherProps } = props;
    // Using a missing icon doesn't produce any errors, just a blank icon, which is the exact intended behaviour.
    // This means we don't need to perform any checks on the icon name.
    const iconName = `material-icon-${icon}`;
    const iconClass = (0, clsx_1.default)('material-icon', iconName, className);
    const svgId = `icon-${style}-${icon}-${size}px`;
    return ((0, jsx_runtime_1.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", className: iconClass, height: size, width: size, onClick: onClick, ...otherProps, children: (0, jsx_runtime_1.jsx)("use", { xlinkHref: `${material_icons_svg_1.default}#${svgId}` }) }));
}
exports.default = React.memo(MaterialIcon);
//# sourceMappingURL=index.js.map