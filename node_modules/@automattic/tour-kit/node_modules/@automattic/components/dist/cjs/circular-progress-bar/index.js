"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
require("./style.scss");
const CircularProgressBar = ({ currentStep, numberOfSteps, size, enableDesktopScaling = false, strokeWidth = 4, showProgressText = true, }) => {
    const SIZE = size;
    const RADIUS = SIZE / 2 - strokeWidth / 2;
    const FULL_ARC = 2 * Math.PI * RADIUS;
    if (currentStep === null || !numberOfSteps) {
        return null;
    }
    return ((0, jsx_runtime_1.jsxs)("div", { role: "progressbar", className: (0, clsx_1.default)('circular__progress-bar', {
            'desktop-scaling': enableDesktopScaling,
        }), style: { width: SIZE, height: SIZE }, children: [(0, jsx_runtime_1.jsxs)("svg", { viewBox: `0 0 ${SIZE} ${SIZE}`, style: { width: SIZE, height: SIZE }, fill: "none", xmlns: "http://www.w3.org/2000/svg", children: [(0, jsx_runtime_1.jsx)("circle", { className: "circular__progress-bar-empty-circle", fill: "none", cx: SIZE / 2, cy: SIZE / 2, r: RADIUS, strokeWidth: strokeWidth }), (0, jsx_runtime_1.jsx)("circle", { style: {
                            display: currentStep === 0 ? 'none' : 'block',
                            strokeDasharray: `${FULL_ARC * (currentStep / numberOfSteps)}, ${FULL_ARC}`,
                        }, className: "circular__progress-bar-fill-circle", fill: "none", cx: SIZE / 2, cy: SIZE / 2, r: RADIUS, strokeWidth: strokeWidth })] }), showProgressText && ((0, jsx_runtime_1.jsxs)("div", { className: "circular__progress-bar-text", children: [currentStep, "/", numberOfSteps] }))] }));
};
exports.default = CircularProgressBar;
//# sourceMappingURL=index.js.map