"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useViewportScale = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const constants_1 = require("./constants");
// Device viewport width in pixels
const DEVICE_COMPUTER_WIDTH = 1220;
const DEVICE_TABLET_WIDTH = 782;
const DEVICE_PHONE_WIDTH = 480;
const deviceWidthById = {
    computer: DEVICE_COMPUTER_WIDTH,
    tablet: DEVICE_TABLET_WIDTH,
    phone: DEVICE_PHONE_WIDTH,
};
const useViewportScale = (device, viewportWidth) => {
    const deviceWidth = deviceWidthById[device];
    let width = viewportWidth;
    if (!viewportWidth) {
        // Scale is 1 when the feature is disabled
        return 1;
    }
    if (constants_1.DEVICE_TYPES.COMPUTER !== device && viewportWidth > deviceWidth) {
        // Use device width as max width for tablet and phone
        width = deviceWidth;
    }
    return Math.min(width / deviceWidth, 1);
};
exports.useViewportScale = useViewportScale;
const FixedViewport = ({ children, viewportWidth, device }) => {
    const viewportScale = (0, exports.useViewportScale)(device, viewportWidth);
    return ((0, jsx_runtime_1.jsx)("div", { className: "device-switcher__viewport", style: {
            '--viewport-width': deviceWidthById[device],
            '--viewport-scale': viewportScale,
        }, children: children }));
};
exports.default = FixedViewport;
//# sourceMappingURL=fixed-viewport.js.map