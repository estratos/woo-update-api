"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const throttle_1 = tslib_1.__importDefault(require("lodash/throttle"));
const react_1 = require("react");
const THROTTLE_DURATION = 400; // in ms
function useResize(uplotRef, containerRef) {
    (0, react_1.useEffect)(() => {
        if (!uplotRef.current || !containerRef.current) {
            return;
        }
        const resizeChart = (0, throttle_1.default)(() => {
            // Repeat the check since resize can happen much later than event registration.
            if (!uplotRef.current || !containerRef.current) {
                return;
            }
            // Only update width, not height.
            uplotRef.current.setSize({
                height: uplotRef.current.height,
                width: containerRef.current.clientWidth,
            });
        }, THROTTLE_DURATION);
        resizeChart();
        window.addEventListener('resize', resizeChart);
        // Cleanup on unmount.
        return () => window.removeEventListener('resize', resizeChart);
    }, [uplotRef, containerRef]);
}
exports.default = useResize;
//# sourceMappingURL=use-resize.js.map