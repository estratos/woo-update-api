"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SiteThumbnail = exports.DEFAULT_THUMBNAIL_SIZE = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const css_1 = require("@emotion/css");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
require("./style.scss");
const use_mshots_img_1 = require("./use-mshots-img");
const utils_1 = require("./utils");
exports.DEFAULT_THUMBNAIL_SIZE = { width: 106, height: 76.55 };
const DEFAULT_CLASSNAME = (0, css_1.css)(exports.DEFAULT_THUMBNAIL_SIZE);
const VIEWPORT_BASE = 1200;
const SiteThumbnail = ({ backgroundColor, children, className, alt, mShotsUrl = '', bgColorImgUrl, width = exports.DEFAULT_THUMBNAIL_SIZE.width, height = exports.DEFAULT_THUMBNAIL_SIZE.height, dimensionsSrcset = [], sizesAttr = '', viewport = VIEWPORT_BASE, mshotsOption, }) => {
    const options = {
        vpw: viewport,
        vph: viewport,
        w: width,
        h: height,
        ...mshotsOption,
    };
    const { imgProps, isLoading, isError } = (0, use_mshots_img_1.useMshotsImg)(mShotsUrl, options, [
        ...dimensionsSrcset,
        { width, height },
    ]);
    const color = backgroundColor && (0, utils_1.getTextColorFromBackground)(backgroundColor);
    const classes = (0, clsx_1.default)('site-thumbnail', isLoading ? 'site-thumbnail-loading' : 'site-thumbnail-visible', DEFAULT_CLASSNAME, className);
    const showLoader = mShotsUrl && !isError;
    const mshotIsFullyLoaded = imgProps.src && !isError && !isLoading;
    const blurSize = width > exports.DEFAULT_THUMBNAIL_SIZE.width ? 'medium' : 'small';
    return ((0, jsx_runtime_1.jsxs)("div", { className: classes, style: { backgroundColor, color }, children: [!!bgColorImgUrl && !mshotIsFullyLoaded && ((0, jsx_runtime_1.jsx)("div", { className: `site-thumbnail__image-bg site-thumbnail__image-blur-${blurSize}`, style: { backgroundImage: `url(${bgColorImgUrl})` } })), (isLoading || isError) && ((0, jsx_runtime_1.jsx)("div", { className: (0, clsx_1.default)({ 'site-thumbnail-loader': showLoader }, 'site-thumbnail-icon'), children: children })), imgProps.src && !isLoading && !isError && ((0, jsx_runtime_1.jsx)("img", { className: "site-thumbnail__image", alt: alt, sizes: sizesAttr || `${width}px`, ...imgProps }))] }));
};
exports.SiteThumbnail = SiteThumbnail;
//# sourceMappingURL=index.js.map