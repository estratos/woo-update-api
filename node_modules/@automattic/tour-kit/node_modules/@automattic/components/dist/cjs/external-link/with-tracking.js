"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const calypso_analytics_1 = require("@automattic/calypso-analytics");
const prop_types_1 = tslib_1.__importDefault(require("prop-types"));
const react_1 = require("react");
const index_1 = tslib_1.__importDefault(require("./index"));
class ExternalLinkWithTracking extends react_1.Component {
    handleClickEvent() {
        return () => {
            const { onClick, tracksEventName, tracksEventProps } = this.props;
            const trackEvent = this.props.recordTracksEvent || calypso_analytics_1.recordTracksEvent;
            trackEvent(tracksEventName, tracksEventProps);
            if (onClick) {
                onClick();
            }
        };
    }
    render() {
        const { onClick, recordTracksEvent: recordEvent, tracksEventName, tracksEventProps, ...props } = this.props;
        return (0, jsx_runtime_1.jsx)(index_1.default, { onClick: this.handleClickEvent(), ...props });
    }
}
ExternalLinkWithTracking.propTypes = {
    className: prop_types_1.default.string,
    href: prop_types_1.default.string,
    icon: prop_types_1.default.bool,
    iconClassName: prop_types_1.default.string,
    iconSize: prop_types_1.default.number,
    onClick: prop_types_1.default.func,
    showIconFirst: prop_types_1.default.bool,
    target: prop_types_1.default.string,
    tracksEventName: prop_types_1.default.string.isRequired,
    tracksEventProps: prop_types_1.default.object,
    rel: prop_types_1.default.string,
    children: prop_types_1.default.node,
    recordTracksEvent: prop_types_1.default.func,
};
exports.default = ExternalLinkWithTracking;
//# sourceMappingURL=with-tracking.js.map