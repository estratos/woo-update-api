"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Default = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const button_1 = tslib_1.__importDefault(require("../button"));
const _1 = tslib_1.__importDefault(require("./"));
const TooltipWrapper = ({ placement }) => {
    const [show, setShow] = (0, react_1.useState)(false);
    const handleOpen = () => setShow(true);
    const handleClose = () => setShow(false);
    const tooltipRef = (0, react_1.useRef)();
    const placements = {
        top: 'top',
        tl: 'top left',
        tr: 'top right',
        left: 'left',
        right: 'right',
        bottom: 'bottom',
        bl: 'bottom left',
        br: 'bottom right',
    };
    const buttonWidth = 80;
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(button_1.default, { onMouseEnter: handleOpen, onMouseLeave: handleClose, onClick: handleClose, ref: tooltipRef, style: { width: buttonWidth, margin: 4, borderRadius: '6px' }, children: placement }), (0, jsx_runtime_1.jsx)(_1.default, { position: placements[placement.toLowerCase()], isVisible: show, onClose: handleClose, context: tooltipRef.current, children: (0, jsx_runtime_1.jsx)("div", { children: "Prompt" }) })] }));
};
const Default = () => {
    const buttonWidth = 80;
    return ((0, jsx_runtime_1.jsx)("div", { style: { padding: '80px' }, children: (0, jsx_runtime_1.jsxs)("div", { className: "demo", children: [(0, jsx_runtime_1.jsxs)("div", { style: { marginInlineStart: buttonWidth + 4, whiteSpace: 'nowrap' }, children: [(0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "TL" }), (0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "Top" }), (0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "TR" })] }), (0, jsx_runtime_1.jsx)("div", { style: { width: buttonWidth, float: 'inline-start' }, children: (0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "Left" }) }), (0, jsx_runtime_1.jsx)("div", { style: { width: buttonWidth, marginInlineStart: buttonWidth * 4 + 24 }, children: (0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "Right" }) }), (0, jsx_runtime_1.jsxs)("div", { style: { marginInlineStart: buttonWidth, clear: 'both', whiteSpace: 'nowrap' }, children: [(0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "BL" }), (0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "Bottom" }), (0, jsx_runtime_1.jsx)(TooltipWrapper, { placement: "BR" })] })] }) }));
};
exports.Default = Default;
exports.default = {
    title: 'packages/components/Tooltip',
    component: _1.default,
};
//# sourceMappingURL=index.stories.js.map