"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const prop_types_1 = tslib_1.__importDefault(require("prop-types"));
const react_1 = require("react");
class SegmentedControlItem extends react_1.Component {
    static propTypes = {
        children: prop_types_1.default.node.isRequired,
        path: prop_types_1.default.string,
        selected: prop_types_1.default.bool,
        title: prop_types_1.default.string,
        value: prop_types_1.default.string,
        onClick: prop_types_1.default.func,
        index: prop_types_1.default.number,
    };
    static defaultProps = {
        selected: false,
    };
    handleKeyEvent = (event) => {
        switch (event.keyCode) {
            case 13: // enter
            case 32: // space
                event.preventDefault();
                document.activeElement.click();
                break;
        }
    };
    render() {
        const itemClassName = (0, clsx_1.default)({
            'segmented-control__item': true,
            'is-selected': this.props.selected,
        });
        const linkClassName = (0, clsx_1.default)('segmented-control__link', {
            [`item-index-${this.props.index}`]: this.props.index != null,
        });
        return ((0, jsx_runtime_1.jsx)("li", { className: itemClassName, role: "none", children: (0, jsx_runtime_1.jsx)("a", { href: this.props.path, className: linkClassName, onClick: this.props.onClick, title: this.props.title, "data-e2e-value": this.props.value, role: "radio", tabIndex: 0, "aria-checked": this.props.selected, onKeyDown: this.handleKeyEvent, children: (0, jsx_runtime_1.jsx)("span", { className: "segmented-control__text", children: this.props.children }) }) }));
    }
}
exports.default = SegmentedControlItem;
//# sourceMappingURL=item.js.map