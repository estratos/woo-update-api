"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const viewport_react_1 = require("@automattic/viewport-react");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const dropdown_group_1 = tslib_1.__importDefault(require("./dropdown-group"));
const swipe_group_1 = tslib_1.__importDefault(require("./swipe-group"));
require("./style.scss");
const ResponsiveToolbarGroup = ({ children, className = '', hideRatio = 0.99, showRatio = 1, rootMargin = '0px', onClick = () => null, initialActiveIndex = -1, swipeBreakpoint = '<660px', hrefList = [], forceSwipe = false, swipeEnabled = true, }) => {
    const classes = (0, clsx_1.default)('responsive-toolbar-group', className);
    const isWithinBreakpoint = (0, viewport_react_1.useBreakpoint)(swipeBreakpoint);
    if (forceSwipe || (swipeEnabled && isWithinBreakpoint)) {
        return ((0, jsx_runtime_1.jsx)(swipe_group_1.default, { className: classes, initialActiveIndex: initialActiveIndex, onClick: onClick, hrefList: hrefList, children: children }));
    }
    return ((0, jsx_runtime_1.jsx)(dropdown_group_1.default, { className: classes, initialActiveIndex: initialActiveIndex, onClick: onClick, hideRatio: hideRatio, showRatio: showRatio, rootMargin: rootMargin, children: children }));
};
exports.default = ResponsiveToolbarGroup;
//# sourceMappingURL=index.js.map