"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = require("react");
const __1 = require("../");
const popover_1 = tslib_1.__importDefault(require("../popover"));
const numbers_1 = require("./lib/numbers");
function TooltipContent({ value }) {
    return ((0, jsx_runtime_1.jsx)("div", { className: "highlight-card-tooltip-content", children: (0, jsx_runtime_1.jsx)("span", { className: "highlight-card-tooltip-counts", children: (0, numbers_1.formatNumber)(value, false) }) }));
}
function CountCard({ heading, icon, note, value, showValueTooltip, }) {
    const textRef = (0, react_1.useRef)(null);
    const [isTooltipVisible, setTooltipVisible] = (0, react_1.useState)(false);
    // Tooltips are used to show the full number instead of the shortened number.
    // Non-numeric values are not shown in the tooltip.
    const shouldShowTooltip = showValueTooltip && typeof value === 'number';
    return ((0, jsx_runtime_1.jsxs)(__1.Card, { className: "highlight-card", children: [icon && (0, jsx_runtime_1.jsx)("div", { className: "highlight-card-icon", children: icon }), heading && (0, jsx_runtime_1.jsx)("div", { className: "highlight-card-heading", children: heading }), (0, jsx_runtime_1.jsx)("div", { className: (0, clsx_1.default)('highlight-card-count', {
                    'is-pointer': showValueTooltip,
                }), onMouseEnter: () => setTooltipVisible(true), onMouseLeave: () => setTooltipVisible(false), children: (0, jsx_runtime_1.jsx)("span", { className: "highlight-card-count-value", ref: textRef, children: typeof value === 'number' ? (0, numbers_1.formatNumber)(value, true) : value }) }), shouldShowTooltip && ((0, jsx_runtime_1.jsxs)(popover_1.default, { className: "tooltip tooltip--darker highlight-card-tooltip", isVisible: isTooltipVisible, position: "bottom right", context: textRef.current, children: [(0, jsx_runtime_1.jsx)(TooltipContent, { value: value }), note && (0, jsx_runtime_1.jsx)("div", { className: "highlight-card-tooltip-note", children: note })] }))] }));
}
exports.default = CountCard;
//# sourceMappingURL=count-card.js.map