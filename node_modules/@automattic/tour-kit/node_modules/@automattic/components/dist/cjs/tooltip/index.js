"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const viewport_react_1 = require("@automattic/viewport-react");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const prop_types_1 = tslib_1.__importDefault(require("prop-types"));
const popover_1 = tslib_1.__importDefault(require("../popover"));
require("./style.scss");
function Tooltip({ autoPosition, className, id, isVisible, position = 'top', status, showDelay = 100, showOnMobile = false, hideArrow = false, children, context, }) {
    const isMobile = (0, viewport_react_1.useMobileBreakpoint)();
    if (!showOnMobile && isMobile) {
        return null;
    }
    const classes = (0, clsx_1.default)(['tooltip', className], {
        [`is-${status}`]: status,
    });
    return ((0, jsx_runtime_1.jsx)(popover_1.default, { autoPosition: autoPosition, className: classes, context: context, id: id, isVisible: isVisible, position: position, showDelay: showDelay, hideArrow: hideArrow, children: children }));
}
Tooltip.propTypes = {
    autoPosition: prop_types_1.default.bool,
    className: prop_types_1.default.string,
    id: prop_types_1.default.string,
    isVisible: prop_types_1.default.bool,
    position: prop_types_1.default.string,
    status: prop_types_1.default.string,
    showDelay: prop_types_1.default.number,
    showOnMobile: prop_types_1.default.bool,
    hideArrow: prop_types_1.default.bool,
    children: prop_types_1.default.node,
    context: prop_types_1.default.any,
};
exports.default = Tooltip;
//# sourceMappingURL=index.js.map