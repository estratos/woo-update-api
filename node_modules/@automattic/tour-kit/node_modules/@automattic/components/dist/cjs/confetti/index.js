"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const canvas_confetti_1 = tslib_1.__importDefault(require("canvas-confetti"));
const react_1 = require("react");
const COLORS = ['#31CC9F', '#618DF2', '#6AB3D0', '#B35EB1', '#F2D76B', '#FAA754', '#E34C84'];
function fireConfetti(colors) {
    const count = 60;
    const scale = 2;
    const defaults = {
        origin: { y: 0.4 },
        colors,
        scalar: scale,
        spread: 180,
        gravity: 6,
    };
    function fire(particleRatio, opts) {
        (0, canvas_confetti_1.default)(Object.assign({}, defaults, opts, {
            particleCount: Math.floor(count * particleRatio),
            startVelocity: opts.startVelocity ? scale * opts.startVelocity : undefined,
            spread: scale * opts.spread,
            scalar: opts.scalar ? scale * opts.scalar : scale,
            // counter react-modal very high z index, always render the confetti on top
            zIndex: 1000000,
        }));
    }
    fire(0.25, {
        spread: 26,
        startVelocity: 55,
    });
    fire(0.2, {
        spread: 60,
    });
    fire(0.35, {
        spread: 100,
        decay: 0.91,
        scalar: 0.8,
    });
    fire(0.1, {
        spread: 120,
        startVelocity: 25,
        decay: 0.92,
        scalar: 1.2,
    });
    fire(0.1, {
        spread: 120,
        startVelocity: 45,
    });
}
const ConfettiAnimation = ({ trigger = true, delay = 0, colors = COLORS }) => {
    (0, react_1.useEffect)(() => {
        if (trigger) {
            setTimeout(() => fireConfetti(colors), delay);
        }
    }, [trigger, delay, colors]);
    return null;
};
exports.default = ConfettiAnimation;
//# sourceMappingURL=index.js.map