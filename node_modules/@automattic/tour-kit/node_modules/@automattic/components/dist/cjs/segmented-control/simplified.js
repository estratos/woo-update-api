"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const prop_types_1 = tslib_1.__importDefault(require("prop-types"));
const react_1 = require("react");
const _1 = tslib_1.__importDefault(require("."));
const noop = () => { };
function SimplifiedSegmentedControl({ options, initialSelected = options[0].value, onSelect = noop, ...props }) {
    const [selected, setSelected] = (0, react_1.useState)(initialSelected);
    const renderedOptions = options.map((option, index) => ((0, jsx_runtime_1.jsx)(_1.default.Item, { index: index, onClick: () => {
            setSelected(option.value);
            onSelect(option);
        }, path: option.path, selected: selected === option.value, value: option.value, children: option.label }, index)));
    return (0, jsx_runtime_1.jsx)(_1.default, { ...props, children: renderedOptions });
}
SimplifiedSegmentedControl.propTypes = {
    className: prop_types_1.default.string,
    compact: prop_types_1.default.bool,
    primary: prop_types_1.default.bool,
    style: prop_types_1.default.object,
    initialSelected: prop_types_1.default.string,
    onSelect: prop_types_1.default.func,
    options: prop_types_1.default.arrayOf(prop_types_1.default.shape({
        value: prop_types_1.default.string.isRequired,
        label: prop_types_1.default.string.isRequired,
        path: prop_types_1.default.string,
    })).isRequired,
};
exports.default = SimplifiedSegmentedControl;
//# sourceMappingURL=simplified.js.map