import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import clsx from 'clsx';
import { useTranslate } from 'i18n-calypso';
import './stats-card.scss';
const BASE_CLASS_NAME = 'stats-card';
const StatsCard = ({ children, className, title, titleURL, titleAriaLevel = 4, titleNodes, footerAction, isEmpty, emptyMessage, heroElement, splitHeader, metricLabel, mainItemLabel, additionalHeaderColumns, toggleControl, headerClassName, overlay, }) => {
    const translate = useTranslate();
    const titleNode = titleURL ? (_jsx("a", { href: `${titleURL}`, className: `${BASE_CLASS_NAME}-header__title`, children: title })) : (_jsxs("div", { className: `${BASE_CLASS_NAME}-header__title`, role: "heading", "aria-level": titleAriaLevel, children: [_jsx("div", { children: title }), _jsx("div", { className: `${BASE_CLASS_NAME}-header__title-nodes`, children: titleNodes })] }));
    // On one line shows card title and value column header
    const simpleHeaderNode = (_jsxs("div", { className: clsx(`${BASE_CLASS_NAME}-header`, headerClassName), children: [titleNode, !isEmpty && _jsx("div", { children: metricLabel ?? translate('Views') })] }));
    // Show Card title on one line and all other column header(s) below:
    // (main item, optional additional columns and value)
    const splitHeaderNode = (_jsxs("div", { className: `${BASE_CLASS_NAME}-header ${headerClassName} ${BASE_CLASS_NAME}-header--split`, children: [_jsxs("div", { className: `${BASE_CLASS_NAME}-header--main`, children: [titleNode, toggleControl] }), !isEmpty && (_jsxs("div", { className: `${BASE_CLASS_NAME}--column-header`, children: [_jsxs("div", { className: `${BASE_CLASS_NAME}--column-header__left`, children: [splitHeader && mainItemLabel, additionalHeaderColumns && (_jsx("div", { className: `${BASE_CLASS_NAME}-header__additional`, children: additionalHeaderColumns }))] }, "left"), !isEmpty && (_jsx("div", { className: `${BASE_CLASS_NAME}--column-header__right`, children: metricLabel ?? translate('Views') }, "right"))] }))] }));
    return (_jsxs("div", { className: clsx(className, BASE_CLASS_NAME, {
            [`${BASE_CLASS_NAME}__hasoverlay`]: !!overlay,
        }), children: [_jsxs("div", { className: `${BASE_CLASS_NAME}__content`, children: [!!heroElement && _jsx("div", { className: `${BASE_CLASS_NAME}--hero`, children: heroElement }), _jsxs("div", { className: `${BASE_CLASS_NAME}--header-and-body`, children: [splitHeader ? splitHeaderNode : simpleHeaderNode, _jsx("div", { className: clsx(`${BASE_CLASS_NAME}--body`, {
                                    [`${BASE_CLASS_NAME}--body-empty`]: isEmpty,
                                }), children: isEmpty ? emptyMessage : children })] }), footerAction && (_jsx("a", { className: `${BASE_CLASS_NAME}--footer`, href: footerAction?.url, "aria-label": translate('View all %(title)s', {
                            args: { title: title.toLocaleLowerCase?.() ?? title.toLowerCase() },
                            comment: '"View all posts & pages", "View all referrers", etc.',
                        }), children: footerAction.label || translate('View all') }))] }), overlay && _jsx("div", { className: `${BASE_CLASS_NAME}__overlay`, children: overlay })] }));
};
export default StatsCard;
//# sourceMappingURL=stats-card.js.map