import { jsx as _jsx } from "react/jsx-runtime";
import { ToolbarGroup, ToolbarButton as BaseToolbarButton } from '@wordpress/components';
import clsx from 'clsx';
import { useState, useRef, useEffect } from 'react';
import './style.scss';
const ToolbarButton = BaseToolbarButton;
export default function SwipeGroup({ children, className = '', onClick = () => null, initialActiveIndex = -1, hrefList = [], }) {
    const classes = clsx('responsive-toolbar-group__swipe', className);
    const [activeIndex, setActiveIndex] = useState(initialActiveIndex);
    // Set active on prop change from above
    useEffect(() => {
        setActiveIndex(initialActiveIndex);
    }, [initialActiveIndex]);
    const ref = useRef(null);
    // Scroll to category on load
    useEffect(() => {
        if (ref.current) {
            ref.current.scrollIntoView({ block: 'end', inline: 'center' });
        }
    }, []);
    // Scroll to the beginning when activeIndex changes to 0. This indicates a state reset.
    useEffect(() => {
        if (ref.current && activeIndex === 0) {
            ref.current.scrollIntoView({ block: 'end', inline: 'center' });
        }
    }, [activeIndex]);
    return (_jsx("div", { className: classes, children: _jsx(ToolbarGroup, { className: "responsive-toolbar-group__swipe-list", children: children.map((child, index) => (_jsx(ToolbarButton, { id: `button-item-${index}`, isActive: activeIndex === index, href: hrefList[index], ref: activeIndex === index ? ref : null, onClick: (event) => {
                    setActiveIndex(index);
                    onClick(index);
                    if (typeof hrefList[index] === 'string') {
                        event.preventDefault();
                    }
                }, className: "responsive-toolbar-group__swipe-item", children: child }, `button-item-${index}`))) }) }));
}
//# sourceMappingURL=swipe-group.js.map