import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from '@wordpress/components';
import { Icon } from '@wordpress/icons';
import clsx from 'clsx';
import { translate } from 'i18n-calypso';
import { useRef } from 'react';
import { DEVICES_SUPPORTED, DEVICE_TYPES } from './constants';
import { computer, tablet, phone, zoomIn, zoomOut } from './icons';
import './toolbar.scss';
const DeviceSwitcherToolbar = ({ device: currentDevice, isZoomable, isZoomActive, onDeviceClick, onZoomClick, }) => {
    const devices = useRef({
        [DEVICE_TYPES.COMPUTER]: { title: translate('Desktop'), icon: computer, iconSize: 36 },
        [DEVICE_TYPES.TABLET]: { title: translate('Tablet'), icon: tablet, iconSize: 24 },
        [DEVICE_TYPES.PHONE]: { title: translate('Phone'), icon: phone, iconSize: 24 },
    });
    return (_jsx("div", { className: "device-switcher__toolbar", children: _jsxs("div", { className: "device-switcher__toolbar-devices", children: [DEVICES_SUPPORTED.map((device) => (_jsx(Button, { "aria-label": devices.current[device].title, className: clsx({
                        [device]: true,
                        'is-selected': device === currentDevice,
                    }), onClick: () => onDeviceClick(device), children: _jsx(Icon, { icon: devices.current[device].icon, size: devices.current[device].iconSize }) }, device))), isZoomable && (_jsx(Button, { "aria-label": translate('Zoom out 50%'), className: clsx({ zoom: true, 'is-selected': isZoomActive }), onClick: () => onZoomClick(), children: _jsx(Icon, { icon: isZoomActive ? zoomIn : zoomOut, size: 24 }) }))] }) }));
};
export default DeviceSwitcherToolbar;
//# sourceMappingURL=toolbar.js.map