declare const _default: import("i18n-calypso").LocalizedComponent<typeof FoldableCard>;
export default _default;
declare class FoldableCard extends Component<any, any, any> {
    static displayName: string;
    static propTypes: {
        actionButton: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        actionButtonExpanded: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        cardKey: PropTypes.Requireable<string>;
        clickableHeader: PropTypes.Requireable<boolean>;
        compact: PropTypes.Requireable<boolean>;
        disabled: PropTypes.Requireable<boolean>;
        expandedSummary: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        expanded: PropTypes.Requireable<boolean>;
        headerTagName: PropTypes.Requireable<string>;
        icon: PropTypes.Requireable<string>;
        iconSize: PropTypes.Requireable<number>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        onClose: PropTypes.Requireable<(...args: any[]) => any>;
        onOpen: PropTypes.Requireable<(...args: any[]) => any>;
        screenReaderText: PropTypes.Requireable<NonNullable<string | boolean | null | undefined>>;
        summary: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        hideSummary: PropTypes.Requireable<boolean>;
        highlight: PropTypes.Requireable<string>;
        smooth: PropTypes.Requireable<boolean>;
        contentExpandedStyle: PropTypes.Requireable<object>;
        contentCollapsedStyle: PropTypes.Requireable<object>;
    };
    static defaultProps: {
        onOpen: () => void;
        onClose: () => void;
        cardKey: string;
        headerTagName: string;
        icon: string;
        iconSize: number;
        expanded: boolean;
        screenReaderText: boolean;
        smooth: boolean;
    };
    constructor(props: any);
    constructor(props: any, context: any);
    state: {
        expanded: any;
    };
    UNSAFE_componentWillReceiveProps(nextProps: any): void;
    onClick: () => void;
    getClickAction(): (() => void) | undefined;
    getActionButton(): any;
    renderActionButton(): import("react/jsx-runtime").JSX.Element | undefined;
    renderContent(): import("react/jsx-runtime").JSX.Element;
    renderHeader(): import("react/jsx-runtime").JSX.Element;
    render(): import("react/jsx-runtime").JSX.Element;
}
import { Component } from 'react';
import PropTypes from 'prop-types';
//# sourceMappingURL=index.d.ts.map