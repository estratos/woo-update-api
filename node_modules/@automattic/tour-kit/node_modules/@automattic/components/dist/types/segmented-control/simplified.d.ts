export default SimplifiedSegmentedControl;
declare function SimplifiedSegmentedControl({ options, initialSelected, onSelect, ...props }: {
    [x: string]: any;
    options: any;
    initialSelected?: any;
    onSelect?: (() => void) | undefined;
}): import("react/jsx-runtime").JSX.Element;
declare namespace SimplifiedSegmentedControl {
    namespace propTypes {
        let className: PropTypes.Requireable<string>;
        let compact: PropTypes.Requireable<boolean>;
        let primary: PropTypes.Requireable<boolean>;
        let style: PropTypes.Requireable<object>;
        let initialSelected: PropTypes.Requireable<string>;
        let onSelect: PropTypes.Requireable<(...args: any[]) => any>;
        let options: PropTypes.Validator<(PropTypes.InferProps<{
            value: PropTypes.Validator<string>;
            label: PropTypes.Validator<string>;
            path: PropTypes.Requireable<string>;
        }> | null | undefined)[]>;
    }
}
import PropTypes from 'prop-types';
//# sourceMappingURL=simplified.d.ts.map