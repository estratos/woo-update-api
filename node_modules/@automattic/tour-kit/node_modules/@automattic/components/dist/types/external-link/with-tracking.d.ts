export default ExternalLinkWithTracking;
declare class ExternalLinkWithTracking extends Component<any, any, any> {
    constructor(props: any);
    constructor(props: any, context: any);
    handleClickEvent(): () => void;
    render(): import("react/jsx-runtime").JSX.Element;
}
declare namespace ExternalLinkWithTracking {
    namespace propTypes {
        let className: PropTypes.Requireable<string>;
        let href: PropTypes.Requireable<string>;
        let icon: PropTypes.Requireable<boolean>;
        let iconClassName: PropTypes.Requireable<string>;
        let iconSize: PropTypes.Requireable<number>;
        let onClick: PropTypes.Requireable<(...args: any[]) => any>;
        let showIconFirst: PropTypes.Requireable<boolean>;
        let target: PropTypes.Requireable<string>;
        let tracksEventName: PropTypes.Validator<string>;
        let tracksEventProps: PropTypes.Requireable<object>;
        let rel: PropTypes.Requireable<string>;
        let children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        let recordTracksEvent: PropTypes.Requireable<(...args: any[]) => any>;
    }
}
import { Component } from 'react';
import PropTypes from 'prop-types';
//# sourceMappingURL=with-tracking.d.ts.map