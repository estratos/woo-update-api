export declare const DEFAULT_LOCALE: string;
export declare const COMPACT_FORMATTING_OPTIONS: Intl.NumberFormatOptions;
export declare const STANDARD_FORMATTING_OPTIONS: Intl.NumberFormatOptions;
export declare const PERCENTAGE_FORMATTING_OPTIONS: Intl.NumberFormatOptions;
export declare const DEFAULT_OPTIONS: {
    localeMatcher?: string | undefined;
    style?: string | undefined;
    currency?: string | undefined;
    currencySign?: string | undefined;
    useGrouping?: boolean | undefined;
    minimumIntegerDigits?: number | undefined;
    minimumFractionDigits?: number | undefined;
    maximumFractionDigits?: number | undefined;
    minimumSignificantDigits?: number | undefined;
    maximumSignificantDigits?: number | undefined;
    compactDisplay?: "short" | "long" | undefined;
    notation?: "compact" | "standard" | "scientific" | "engineering" | undefined;
    signDisplay?: "auto" | "always" | "never" | "exceptZero" | undefined;
    unit?: string | undefined;
    unitDisplay?: "short" | "long" | "narrow" | undefined;
    currencyDisplay?: string | undefined;
};
export default function formatNumber(number: number | null, locale?: string, options?: {
    localeMatcher?: string | undefined;
    style?: string | undefined;
    currency?: string | undefined;
    currencySign?: string | undefined;
    useGrouping?: boolean | undefined;
    minimumIntegerDigits?: number | undefined;
    minimumFractionDigits?: number | undefined;
    maximumFractionDigits?: number | undefined;
    minimumSignificantDigits?: number | undefined;
    maximumSignificantDigits?: number | undefined;
    compactDisplay?: "short" | "long" | undefined;
    notation?: "compact" | "standard" | "scientific" | "engineering" | undefined;
    signDisplay?: "auto" | "always" | "never" | "exceptZero" | undefined;
    unit?: string | undefined;
    unitDisplay?: "short" | "long" | "narrow" | undefined;
    currencyDisplay?: string | undefined;
}): string;
//# sourceMappingURL=format-number.d.ts.map