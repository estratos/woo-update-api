"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Placement = exports.AutoScroll = exports.SpotlightInteractivityWithAutoResize = exports.SpotlightInteractivity = exports.Spotlight = exports.Overlay = exports.Default = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const element_1 = require("@wordpress/element");
const __1 = tslib_1.__importDefault(require(".."));
exports.default = { title: 'tour-kit' };
const References = () => {
    return ((0, jsx_runtime_1.jsx)("div", { className: "storybook__tourkit-references", children: (0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit-references-container", children: [(0, jsx_runtime_1.jsx)("div", { style: { resize: 'both', overflow: 'auto' }, className: "storybook__tourkit-references-a", children: (0, jsx_runtime_1.jsx)("p", { children: "Reference A" }) }), (0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit-references-b", children: [(0, jsx_runtime_1.jsx)("p", { children: "Reference B" }), (0, jsx_runtime_1.jsx)("div", { style: { display: 'grid', placeItems: 'center' }, children: (0, jsx_runtime_1.jsx)("input", { style: { margin: 'auto', display: 'block' } }) })] }), (0, jsx_runtime_1.jsx)("div", { className: "storybook__tourkit-references-c", children: (0, jsx_runtime_1.jsx)("p", { children: "Reference C" }) }), (0, jsx_runtime_1.jsx)("div", { className: "storybook__tourkit-references-d", children: (0, jsx_runtime_1.jsx)("p", { children: "Reference D" }) })] }) }));
};
const Tour = ({ onClose, options, placement, }) => {
    const config = {
        placement: placement || 'bottom',
        steps: [
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-a',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-b',
                    mobile: '.storybook__tourkit-references-b',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-c',
                    mobile: '.storybook__tourkit-references-c',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-d',
                    mobile: '.storybook__tourkit-references-d',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
        ],
        renderers: {
            tourStep: ({ steps, currentStepIndex, onNextStep, onDismiss, onPreviousStep, onMinimize, setInitialFocusedElement, }) => {
                return ((0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit-step", children: [(0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit-step-controls", children: [(0, jsx_runtime_1.jsx)("button", { onClick: onDismiss('main-btn'), children: "Close" }), (0, jsx_runtime_1.jsx)("button", { onClick: onMinimize, children: "Minimize" })] }), (0, jsx_runtime_1.jsx)("p", { children: `${steps[currentStepIndex].meta.description} (${currentStepIndex})` }), (0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit-step-controls", children: [(0, jsx_runtime_1.jsx)("button", { onClick: onNextStep, ref: setInitialFocusedElement, children: "Next" }), (0, jsx_runtime_1.jsx)("button", { onClick: onPreviousStep, children: "Previous" })] })] }));
            },
            tourMinimized: ({ onMaximize, onDismiss }) => {
                return ((0, jsx_runtime_1.jsx)("div", { className: "storybook__tourkit-minimized", children: (0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit-minimized-controls", children: [(0, jsx_runtime_1.jsx)("button", { onClick: onDismiss('main-btn'), children: "Close" }), (0, jsx_runtime_1.jsx)("button", { onClick: onMaximize, children: "Maximize" })] }) }));
            },
        },
        closeHandler: onClose,
        options: {
            classNames: ['mytour'],
            ...options,
        },
    };
    return (0, jsx_runtime_1.jsx)(__1.default, { config: config });
};
const StoryTour = ({ options = {}, placement, }) => {
    const [showTour, setShowTour] = (0, element_1.useState)(false);
    return ((0, jsx_runtime_1.jsxs)("div", { className: "storybook__tourkit", children: [(0, jsx_runtime_1.jsx)(References, {}), !showTour && (0, jsx_runtime_1.jsx)("button", { onClick: () => setShowTour(true), children: "Start Tour" }), showTour && ((0, jsx_runtime_1.jsx)(Tour, { onClose: () => setShowTour(false), options: options, placement: placement }))] }));
};
const Default = () => (0, jsx_runtime_1.jsx)(StoryTour, {});
exports.Default = Default;
const Overlay = () => (0, jsx_runtime_1.jsx)(StoryTour, { options: { effects: { overlay: true } } });
exports.Overlay = Overlay;
const Spotlight = () => (0, jsx_runtime_1.jsx)(StoryTour, { options: { effects: { spotlight: {} } } });
exports.Spotlight = Spotlight;
const SpotlightInteractivity = () => ((0, jsx_runtime_1.jsx)(StoryTour, { options: {
        effects: { spotlight: { interactivity: { rootElementSelector: '#root', enabled: true } } },
    } }));
exports.SpotlightInteractivity = SpotlightInteractivity;
const SpotlightInteractivityWithAutoResize = () => ((0, jsx_runtime_1.jsx)(StoryTour, { options: {
        effects: {
            spotlight: { interactivity: { rootElementSelector: '#root', enabled: true } },
            liveResize: { mutation: true, resize: true, rootElementSelector: '#root' },
        },
    } }));
exports.SpotlightInteractivityWithAutoResize = SpotlightInteractivityWithAutoResize;
const AutoScroll = () => ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("div", { style: { height: '10vh' } }), (0, jsx_runtime_1.jsx)(StoryTour, { options: {
                effects: {
                    autoScroll: {
                        behavior: 'smooth',
                    },
                },
            } })] }));
exports.AutoScroll = AutoScroll;
const Placement = () => (0, jsx_runtime_1.jsx)(StoryTour, { placement: "left" });
exports.Placement = Placement;
//# sourceMappingURL=index.stories.js.map