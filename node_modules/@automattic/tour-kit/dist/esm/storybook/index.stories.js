import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from '@wordpress/element';
import TourKit from '..';
export default { title: 'tour-kit' };
const References = () => {
    return (_jsx("div", { className: "storybook__tourkit-references", children: _jsxs("div", { className: "storybook__tourkit-references-container", children: [_jsx("div", { style: { resize: 'both', overflow: 'auto' }, className: "storybook__tourkit-references-a", children: _jsx("p", { children: "Reference A" }) }), _jsxs("div", { className: "storybook__tourkit-references-b", children: [_jsx("p", { children: "Reference B" }), _jsx("div", { style: { display: 'grid', placeItems: 'center' }, children: _jsx("input", { style: { margin: 'auto', display: 'block' } }) })] }), _jsx("div", { className: "storybook__tourkit-references-c", children: _jsx("p", { children: "Reference C" }) }), _jsx("div", { className: "storybook__tourkit-references-d", children: _jsx("p", { children: "Reference D" }) })] }) }));
};
const Tour = ({ onClose, options, placement, }) => {
    const config = {
        placement: placement || 'bottom',
        steps: [
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-a',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-b',
                    mobile: '.storybook__tourkit-references-b',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-c',
                    mobile: '.storybook__tourkit-references-c',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
            {
                referenceElements: {
                    desktop: '.storybook__tourkit-references-d',
                    mobile: '.storybook__tourkit-references-d',
                },
                meta: {
                    description: 'Lorem ipsum dolor sit amet.',
                },
            },
        ],
        renderers: {
            tourStep: ({ steps, currentStepIndex, onNextStep, onDismiss, onPreviousStep, onMinimize, setInitialFocusedElement, }) => {
                return (_jsxs("div", { className: "storybook__tourkit-step", children: [_jsxs("div", { className: "storybook__tourkit-step-controls", children: [_jsx("button", { onClick: onDismiss('main-btn'), children: "Close" }), _jsx("button", { onClick: onMinimize, children: "Minimize" })] }), _jsx("p", { children: `${steps[currentStepIndex].meta.description} (${currentStepIndex})` }), _jsxs("div", { className: "storybook__tourkit-step-controls", children: [_jsx("button", { onClick: onNextStep, ref: setInitialFocusedElement, children: "Next" }), _jsx("button", { onClick: onPreviousStep, children: "Previous" })] })] }));
            },
            tourMinimized: ({ onMaximize, onDismiss }) => {
                return (_jsx("div", { className: "storybook__tourkit-minimized", children: _jsxs("div", { className: "storybook__tourkit-minimized-controls", children: [_jsx("button", { onClick: onDismiss('main-btn'), children: "Close" }), _jsx("button", { onClick: onMaximize, children: "Maximize" })] }) }));
            },
        },
        closeHandler: onClose,
        options: {
            classNames: ['mytour'],
            ...options,
        },
    };
    return _jsx(TourKit, { config: config });
};
const StoryTour = ({ options = {}, placement, }) => {
    const [showTour, setShowTour] = useState(false);
    return (_jsxs("div", { className: "storybook__tourkit", children: [_jsx(References, {}), !showTour && _jsx("button", { onClick: () => setShowTour(true), children: "Start Tour" }), showTour && (_jsx(Tour, { onClose: () => setShowTour(false), options: options, placement: placement }))] }));
};
export const Default = () => _jsx(StoryTour, {});
export const Overlay = () => _jsx(StoryTour, { options: { effects: { overlay: true } } });
export const Spotlight = () => _jsx(StoryTour, { options: { effects: { spotlight: {} } } });
export const SpotlightInteractivity = () => (_jsx(StoryTour, { options: {
        effects: { spotlight: { interactivity: { rootElementSelector: '#root', enabled: true } } },
    } }));
export const SpotlightInteractivityWithAutoResize = () => (_jsx(StoryTour, { options: {
        effects: {
            spotlight: { interactivity: { rootElementSelector: '#root', enabled: true } },
            liveResize: { mutation: true, resize: true, rootElementSelector: '#root' },
        },
    } }));
export const AutoScroll = () => (_jsxs(_Fragment, { children: [_jsx("div", { style: { height: '10vh' } }), _jsx(StoryTour, { options: {
                effects: {
                    autoScroll: {
                        behavior: 'smooth',
                    },
                },
            } })] }));
export const Placement = () => _jsx(StoryTour, { placement: "left" });
//# sourceMappingURL=index.stories.js.map