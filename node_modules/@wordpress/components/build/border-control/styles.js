"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapperWidth = exports.wrapperHeight = exports.resetButton = exports.innerWrapper = exports.colorIndicatorWrapper = exports.colorIndicatorBorder = exports.borderStyleButton = exports.borderSlider = exports.borderControlStylePicker = exports.borderControlPopoverControls = exports.borderControlPopoverContent = exports.borderControlDropdown = exports.borderControl = exports.borderColorIndicator = void 0;

var _react = require("@emotion/react");

var _utils = require("../utils");

var _space = require("../ui/utils/space");

var _baseControlStyles = require("../base-control/styles/base-control-styles");

var _unitControlStyles = require("../unit-control/styles/unit-control-styles");

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

const labelStyles = process.env.NODE_ENV === "production" ? {
  name: "f3vz0n",
  styles: "font-weight:500"
} : {
  name: "rst95r-labelStyles",
  styles: "font-weight:500;label:labelStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCdUIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const focusBoxShadow = /*#__PURE__*/(0, _react.css)("box-shadow:inset 0 0 0 ", _utils.CONFIG.borderWidth, " ", _utils.COLORS.ui.borderFocus, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:focusBoxShadow;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCMEIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
const borderControl = /*#__PURE__*/(0, _react.css)("border:0;padding:0;margin:0;", _utils.boxSizingReset, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControl;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCZ0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
exports.borderControl = borderControl;

const innerWrapper = () => /*#__PURE__*/(0, _react.css)(_unitControlStyles.Root, "{flex:1 1 40%;}&& ", _unitControlStyles.UnitSelect, "{min-height:0;}" + (process.env.NODE_ENV === "production" ? "" : ";label:innerWrapper;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9DcUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
/*
 * This style is only applied to the UnitControl wrapper when the border width
 * field should be a set width. Omitting this allows the UnitControl &
 * RangeControl to share the available width in a 40/60 split respectively.
 */


exports.innerWrapper = innerWrapper;
const wrapperWidth = /*#__PURE__*/(0, _react.css)(_unitControlStyles.Root, "{flex:0 0 auto;}" + (process.env.NODE_ENV === "production" ? "" : ";label:wrapperWidth;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1EK0IiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
/*
 * When default control height is 36px the following should be removed.
 * See: InputControl and __next36pxDefaultSize.
 */

exports.wrapperWidth = wrapperWidth;

const wrapperHeight = __next36pxDefaultSize => {
  return /*#__PURE__*/(0, _react.css)("height:", __next36pxDefaultSize ? '36px' : '30px', ";" + (process.env.NODE_ENV === "production" ? "" : ";label:wrapperHeight;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStEVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIGJveFNpemluZ1Jlc2V0LCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7XG5cdFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxuXHRVbml0U2VsZWN0LFxufSBmcm9tICcuLi91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBsYWJlbFN0eWxlcyA9IGNzc2Bcblx0Zm9udC13ZWlnaHQ6IDUwMDtcbmA7XG5cbmNvbnN0IGZvY3VzQm94U2hhZG93ID0gY3NzYFxuXHRib3gtc2hhZG93OiBpbnNldCAwIDAgMCAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sID0gY3NzYFxuXHRib3JkZXI6IDA7XG5cdHBhZGRpbmc6IDA7XG5cdG1hcmdpbjogMDtcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdGZsZXg6IDEgMSA0MCU7XG5cdH1cblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcblx0XHQvKiBQcmV2ZW50IHVuaXQgc2VsZWN0IGZvcmNpbmcgbWluIGhlaWdodCBsYXJnZXIgdGhhbiBpdHMgVW5pdENvbnRyb2wgKi9cblx0XHRtaW4taGVpZ2h0OiAwO1xuXHR9XG5gO1xuXG4vKlxuICogVGhpcyBzdHlsZSBpcyBvbmx5IGFwcGxpZWQgdG8gdGhlIFVuaXRDb250cm9sIHdyYXBwZXIgd2hlbiB0aGUgYm9yZGVyIHdpZHRoXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdC8qIEZvcmNlIHRoZSBVbml0Q29udHJvbCdzIHNldCB3aWR0aC4gKi9cblx0XHRmbGV4OiAwIDAgYXV0bztcblx0fVxuYDtcblxuLypcbiAqIFdoZW4gZGVmYXVsdCBjb250cm9sIGhlaWdodCBpcyAzNnB4IHRoZSBmb2xsb3dpbmcgc2hvdWxkIGJlIHJlbW92ZWQuXG4gKiBTZWU6IElucHV0Q29udHJvbCBhbmQgX19uZXh0MzZweERlZmF1bHRTaXplLlxuICovXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggX19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhbiApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICczNnB4JyA6ICczMHB4JyB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9ICgpID0+IGNzc2Bcblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0Lypcblx0XHQgKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IGhlaWdodCBhbmQgcGFkZGluZyB0byBmaXQgd2l0aGluXG5cdFx0ICogQm9yZGVyQ29udHJvbCByZWdhcmRsZXNzIG9mIHNpemUuXG5cdFx0ICovXG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAwLjc1ICkgfTtcblx0XHQkeyBydGwoXG5cdFx0XHR7IGJvcmRlclJhZGl1czogYDJweCAwIDAgMnB4YCB9LFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxuXHRcdCkoKSB9XG5cdFx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyIH07XG5cblx0XHQmOmZvY3VzLFxuXHRcdCY6aG92ZXI6bm90KCA6ZGlzYWJsZWQgKSB7XG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xuXHRcdFx0ei1pbmRleDogMTtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoXG5cdGJvcmRlcj86IEJvcmRlcixcblx0X19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhblxuKSA9PiB7XG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1yYWRpdXM6IDk5OTlweDtcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XG5cdFx0d2lkdGg6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdGhlaWdodDogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzI4cHgnIDogJzIycHgnIH07XG5cdFx0cGFkZGluZzogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzJweCcgOiAnMXB4JyB9O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdCR7ICEgX19uZXh0MzZweERlZmF1bHRTaXplXG5cdFx0XHRcdD8gY3NzYFxuXHRcdFx0XHRcdFx0LyogRGltZW5zaW9ucyBmaXQgaW4gMzBweCBvdmVyYWxsIGNvbnRyb2wgaGVpZ2h0LiAqL1xuXHRcdFx0XHRcdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdFx0XHRcdFx0d2lkdGg6IDE2cHg7XG5cdFx0XHRcdCAgYFxuXHRcdFx0XHQ6ICcnIH1cblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG4vLyBNdXN0IGVxdWFsICRjb2xvci1wYWxldHRlLWNpcmNsZS1zaXplIGZyb206XG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xuY29uc3Qgc3dhdGNoR2FwID0gMTI7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHR3aWR0aDogJHsgc3dhdGNoU2l6ZSAqIDYgKyBzd2F0Y2hHYXAgKiA1IH1weDtcblxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cblxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xuXHRcdG1pbi13aWR0aDogMjRweDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcblxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0d2lkdGg6IDEwMCU7XG5cblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXG5cdCYmIHtcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuXHRcdGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
};

exports.wrapperHeight = wrapperHeight;

const borderControlDropdown = () => /*#__PURE__*/(0, _react.css)("background:#fff;&&>button{height:100%;padding:", (0, _space.space)(0.75), ";", (0, _utils.rtl)({
  borderRadius: `2px 0 0 2px`
}, {
  borderRadius: `0 2px 2px 0`
})(), " border:", _utils.CONFIG.borderWidth, " solid ", _utils.COLORS.ui.border, ";&:focus,&:hover:not( :disabled ){", focusBoxShadow, " border-color:", _utils.COLORS.ui.borderFocus, ";z-index:1;position:relative;}}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlDropdown;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9FOEMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");

exports.borderControlDropdown = borderControlDropdown;

const colorIndicatorBorder = border => {
  const {
    color,
    style
  } = border || {};
  const fallbackColor = !!style && style !== 'none' ? _utils.COLORS.gray[300] : undefined;
  return /*#__PURE__*/(0, _react.css)("border-style:", style === 'none' ? 'solid' : style, ";border-color:", color || fallbackColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:colorIndicatorBorder;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9HVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIGJveFNpemluZ1Jlc2V0LCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7XG5cdFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxuXHRVbml0U2VsZWN0LFxufSBmcm9tICcuLi91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBsYWJlbFN0eWxlcyA9IGNzc2Bcblx0Zm9udC13ZWlnaHQ6IDUwMDtcbmA7XG5cbmNvbnN0IGZvY3VzQm94U2hhZG93ID0gY3NzYFxuXHRib3gtc2hhZG93OiBpbnNldCAwIDAgMCAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sID0gY3NzYFxuXHRib3JkZXI6IDA7XG5cdHBhZGRpbmc6IDA7XG5cdG1hcmdpbjogMDtcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdGZsZXg6IDEgMSA0MCU7XG5cdH1cblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcblx0XHQvKiBQcmV2ZW50IHVuaXQgc2VsZWN0IGZvcmNpbmcgbWluIGhlaWdodCBsYXJnZXIgdGhhbiBpdHMgVW5pdENvbnRyb2wgKi9cblx0XHRtaW4taGVpZ2h0OiAwO1xuXHR9XG5gO1xuXG4vKlxuICogVGhpcyBzdHlsZSBpcyBvbmx5IGFwcGxpZWQgdG8gdGhlIFVuaXRDb250cm9sIHdyYXBwZXIgd2hlbiB0aGUgYm9yZGVyIHdpZHRoXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdC8qIEZvcmNlIHRoZSBVbml0Q29udHJvbCdzIHNldCB3aWR0aC4gKi9cblx0XHRmbGV4OiAwIDAgYXV0bztcblx0fVxuYDtcblxuLypcbiAqIFdoZW4gZGVmYXVsdCBjb250cm9sIGhlaWdodCBpcyAzNnB4IHRoZSBmb2xsb3dpbmcgc2hvdWxkIGJlIHJlbW92ZWQuXG4gKiBTZWU6IElucHV0Q29udHJvbCBhbmQgX19uZXh0MzZweERlZmF1bHRTaXplLlxuICovXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggX19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhbiApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICczNnB4JyA6ICczMHB4JyB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9ICgpID0+IGNzc2Bcblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0Lypcblx0XHQgKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IGhlaWdodCBhbmQgcGFkZGluZyB0byBmaXQgd2l0aGluXG5cdFx0ICogQm9yZGVyQ29udHJvbCByZWdhcmRsZXNzIG9mIHNpemUuXG5cdFx0ICovXG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAwLjc1ICkgfTtcblx0XHQkeyBydGwoXG5cdFx0XHR7IGJvcmRlclJhZGl1czogYDJweCAwIDAgMnB4YCB9LFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxuXHRcdCkoKSB9XG5cdFx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyIH07XG5cblx0XHQmOmZvY3VzLFxuXHRcdCY6aG92ZXI6bm90KCA6ZGlzYWJsZWQgKSB7XG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xuXHRcdFx0ei1pbmRleDogMTtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoXG5cdGJvcmRlcj86IEJvcmRlcixcblx0X19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhblxuKSA9PiB7XG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1yYWRpdXM6IDk5OTlweDtcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XG5cdFx0d2lkdGg6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdGhlaWdodDogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzI4cHgnIDogJzIycHgnIH07XG5cdFx0cGFkZGluZzogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzJweCcgOiAnMXB4JyB9O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdCR7ICEgX19uZXh0MzZweERlZmF1bHRTaXplXG5cdFx0XHRcdD8gY3NzYFxuXHRcdFx0XHRcdFx0LyogRGltZW5zaW9ucyBmaXQgaW4gMzBweCBvdmVyYWxsIGNvbnRyb2wgaGVpZ2h0LiAqL1xuXHRcdFx0XHRcdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdFx0XHRcdFx0d2lkdGg6IDE2cHg7XG5cdFx0XHRcdCAgYFxuXHRcdFx0XHQ6ICcnIH1cblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG4vLyBNdXN0IGVxdWFsICRjb2xvci1wYWxldHRlLWNpcmNsZS1zaXplIGZyb206XG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xuY29uc3Qgc3dhdGNoR2FwID0gMTI7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHR3aWR0aDogJHsgc3dhdGNoU2l6ZSAqIDYgKyBzd2F0Y2hHYXAgKiA1IH1weDtcblxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cblxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xuXHRcdG1pbi13aWR0aDogMjRweDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcblxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0d2lkdGg6IDEwMCU7XG5cblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXG5cdCYmIHtcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuXHRcdGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
};

exports.colorIndicatorBorder = colorIndicatorBorder;

var _ref = process.env.NODE_ENV === "production" ? {
  name: "6g24ce",
  styles: "height:16px;width:16px"
} : {
  name: "ux5246-colorIndicatorWrapper",
  styles: "height:16px;width:16px;label:colorIndicatorWrapper;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdJUyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIGJveFNpemluZ1Jlc2V0LCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7XG5cdFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxuXHRVbml0U2VsZWN0LFxufSBmcm9tICcuLi91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBsYWJlbFN0eWxlcyA9IGNzc2Bcblx0Zm9udC13ZWlnaHQ6IDUwMDtcbmA7XG5cbmNvbnN0IGZvY3VzQm94U2hhZG93ID0gY3NzYFxuXHRib3gtc2hhZG93OiBpbnNldCAwIDAgMCAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sID0gY3NzYFxuXHRib3JkZXI6IDA7XG5cdHBhZGRpbmc6IDA7XG5cdG1hcmdpbjogMDtcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdGZsZXg6IDEgMSA0MCU7XG5cdH1cblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcblx0XHQvKiBQcmV2ZW50IHVuaXQgc2VsZWN0IGZvcmNpbmcgbWluIGhlaWdodCBsYXJnZXIgdGhhbiBpdHMgVW5pdENvbnRyb2wgKi9cblx0XHRtaW4taGVpZ2h0OiAwO1xuXHR9XG5gO1xuXG4vKlxuICogVGhpcyBzdHlsZSBpcyBvbmx5IGFwcGxpZWQgdG8gdGhlIFVuaXRDb250cm9sIHdyYXBwZXIgd2hlbiB0aGUgYm9yZGVyIHdpZHRoXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdC8qIEZvcmNlIHRoZSBVbml0Q29udHJvbCdzIHNldCB3aWR0aC4gKi9cblx0XHRmbGV4OiAwIDAgYXV0bztcblx0fVxuYDtcblxuLypcbiAqIFdoZW4gZGVmYXVsdCBjb250cm9sIGhlaWdodCBpcyAzNnB4IHRoZSBmb2xsb3dpbmcgc2hvdWxkIGJlIHJlbW92ZWQuXG4gKiBTZWU6IElucHV0Q29udHJvbCBhbmQgX19uZXh0MzZweERlZmF1bHRTaXplLlxuICovXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggX19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhbiApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICczNnB4JyA6ICczMHB4JyB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9ICgpID0+IGNzc2Bcblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0Lypcblx0XHQgKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IGhlaWdodCBhbmQgcGFkZGluZyB0byBmaXQgd2l0aGluXG5cdFx0ICogQm9yZGVyQ29udHJvbCByZWdhcmRsZXNzIG9mIHNpemUuXG5cdFx0ICovXG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAwLjc1ICkgfTtcblx0XHQkeyBydGwoXG5cdFx0XHR7IGJvcmRlclJhZGl1czogYDJweCAwIDAgMnB4YCB9LFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxuXHRcdCkoKSB9XG5cdFx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyIH07XG5cblx0XHQmOmZvY3VzLFxuXHRcdCY6aG92ZXI6bm90KCA6ZGlzYWJsZWQgKSB7XG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xuXHRcdFx0ei1pbmRleDogMTtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoXG5cdGJvcmRlcj86IEJvcmRlcixcblx0X19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhblxuKSA9PiB7XG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1yYWRpdXM6IDk5OTlweDtcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XG5cdFx0d2lkdGg6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdGhlaWdodDogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzI4cHgnIDogJzIycHgnIH07XG5cdFx0cGFkZGluZzogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzJweCcgOiAnMXB4JyB9O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdCR7ICEgX19uZXh0MzZweERlZmF1bHRTaXplXG5cdFx0XHRcdD8gY3NzYFxuXHRcdFx0XHRcdFx0LyogRGltZW5zaW9ucyBmaXQgaW4gMzBweCBvdmVyYWxsIGNvbnRyb2wgaGVpZ2h0LiAqL1xuXHRcdFx0XHRcdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdFx0XHRcdFx0d2lkdGg6IDE2cHg7XG5cdFx0XHRcdCAgYFxuXHRcdFx0XHQ6ICcnIH1cblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG4vLyBNdXN0IGVxdWFsICRjb2xvci1wYWxldHRlLWNpcmNsZS1zaXplIGZyb206XG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xuY29uc3Qgc3dhdGNoR2FwID0gMTI7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHR3aWR0aDogJHsgc3dhdGNoU2l6ZSAqIDYgKyBzd2F0Y2hHYXAgKiA1IH1weDtcblxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cblxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xuXHRcdG1pbi13aWR0aDogMjRweDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcblxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0d2lkdGg6IDEwMCU7XG5cblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXG5cdCYmIHtcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuXHRcdGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const colorIndicatorWrapper = (border, __next36pxDefaultSize) => {
  const {
    style
  } = border || {};
  return /*#__PURE__*/(0, _react.css)("border-radius:9999px;border:2px solid transparent;", style ? colorIndicatorBorder(border) : undefined, " width:", __next36pxDefaultSize ? '28px' : '22px', ";height:", __next36pxDefaultSize ? '28px' : '22px', ";padding:", __next36pxDefaultSize ? '2px' : '1px', ";&>span{", !__next36pxDefaultSize ? _ref : '', " background:linear-gradient(\n\t\t\t\t-45deg,\n\t\t\t\ttransparent 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 52%,\n\t\t\t\ttransparent 52%\n\t\t\t);}" + (process.env.NODE_ENV === "production" ? "" : ";label:colorIndicatorWrapper;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdIVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIGJveFNpemluZ1Jlc2V0LCBydGwgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7XG5cdFN0eWxlZEZpZWxkLFxuXHRTdHlsZWRMYWJlbCxcbn0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcbmltcG9ydCB7XG5cdFJvb3QgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxuXHRVbml0U2VsZWN0LFxufSBmcm9tICcuLi91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBsYWJlbFN0eWxlcyA9IGNzc2Bcblx0Zm9udC13ZWlnaHQ6IDUwMDtcbmA7XG5cbmNvbnN0IGZvY3VzQm94U2hhZG93ID0gY3NzYFxuXHRib3gtc2hhZG93OiBpbnNldCAwIDAgMCAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sID0gY3NzYFxuXHRib3JkZXI6IDA7XG5cdHBhZGRpbmc6IDA7XG5cdG1hcmdpbjogMDtcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdGZsZXg6IDEgMSA0MCU7XG5cdH1cblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcblx0XHQvKiBQcmV2ZW50IHVuaXQgc2VsZWN0IGZvcmNpbmcgbWluIGhlaWdodCBsYXJnZXIgdGhhbiBpdHMgVW5pdENvbnRyb2wgKi9cblx0XHRtaW4taGVpZ2h0OiAwO1xuXHR9XG5gO1xuXG4vKlxuICogVGhpcyBzdHlsZSBpcyBvbmx5IGFwcGxpZWQgdG8gdGhlIFVuaXRDb250cm9sIHdyYXBwZXIgd2hlbiB0aGUgYm9yZGVyIHdpZHRoXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2Bcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xuXHRcdC8qIEZvcmNlIHRoZSBVbml0Q29udHJvbCdzIHNldCB3aWR0aC4gKi9cblx0XHRmbGV4OiAwIDAgYXV0bztcblx0fVxuYDtcblxuLypcbiAqIFdoZW4gZGVmYXVsdCBjb250cm9sIGhlaWdodCBpcyAzNnB4IHRoZSBmb2xsb3dpbmcgc2hvdWxkIGJlIHJlbW92ZWQuXG4gKiBTZWU6IElucHV0Q29udHJvbCBhbmQgX19uZXh0MzZweERlZmF1bHRTaXplLlxuICovXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggX19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhbiApID0+IHtcblx0cmV0dXJuIGNzc2Bcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICczNnB4JyA6ICczMHB4JyB9O1xuXHRgO1xufTtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9ICgpID0+IGNzc2Bcblx0YmFja2dyb3VuZDogI2ZmZjtcblxuXHQmJiA+IGJ1dHRvbiB7XG5cdFx0Lypcblx0XHQgKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IGhlaWdodCBhbmQgcGFkZGluZyB0byBmaXQgd2l0aGluXG5cdFx0ICogQm9yZGVyQ29udHJvbCByZWdhcmRsZXNzIG9mIHNpemUuXG5cdFx0ICovXG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAwLjc1ICkgfTtcblx0XHQkeyBydGwoXG5cdFx0XHR7IGJvcmRlclJhZGl1czogYDJweCAwIDAgMnB4YCB9LFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxuXHRcdCkoKSB9XG5cdFx0Ym9yZGVyOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyIH07XG5cblx0XHQmOmZvY3VzLFxuXHRcdCY6aG92ZXI6bm90KCA6ZGlzYWJsZWQgKSB7XG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xuXHRcdFx0ei1pbmRleDogMTtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvckJvcmRlciA9ICggYm9yZGVyPzogQm9yZGVyICkgPT4ge1xuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xuXG5cdGNvbnN0IGZhbGxiYWNrQ29sb3IgPVxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb2xvckluZGljYXRvcldyYXBwZXIgPSAoXG5cdGJvcmRlcj86IEJvcmRlcixcblx0X19uZXh0MzZweERlZmF1bHRTaXplPzogYm9vbGVhblxuKSA9PiB7XG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRyZXR1cm4gY3NzYFxuXHRcdGJvcmRlci1yYWRpdXM6IDk5OTlweDtcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XG5cdFx0d2lkdGg6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdGhlaWdodDogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzI4cHgnIDogJzIycHgnIH07XG5cdFx0cGFkZGluZzogJHsgX19uZXh0MzZweERlZmF1bHRTaXplID8gJzJweCcgOiAnMXB4JyB9O1xuXG5cdFx0Lypcblx0XHQgKiBDb2xvckluZGljYXRvclxuXHRcdCAqXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxuXHRcdCAqL1xuXHRcdCYgPiBzcGFuIHtcblx0XHRcdCR7ICEgX19uZXh0MzZweERlZmF1bHRTaXplXG5cdFx0XHRcdD8gY3NzYFxuXHRcdFx0XHRcdFx0LyogRGltZW5zaW9ucyBmaXQgaW4gMzBweCBvdmVyYWxsIGNvbnRyb2wgaGVpZ2h0LiAqL1xuXHRcdFx0XHRcdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdFx0XHRcdFx0d2lkdGg6IDE2cHg7XG5cdFx0XHRcdCAgYFxuXHRcdFx0XHQ6ICcnIH1cblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0LTQ1ZGVnLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXG5cdFx0XHRcdHRyYW5zcGFyZW50IDUyJVxuXHRcdFx0KTtcblx0XHR9XG5cdGA7XG59O1xuXG4vLyBNdXN0IGVxdWFsICRjb2xvci1wYWxldHRlLWNpcmNsZS1zaXplIGZyb206XG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xuY29uc3Qgc3dhdGNoR2FwID0gMTI7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxuXHR3aWR0aDogJHsgc3dhdGNoU2l6ZSAqIDYgKyBzd2F0Y2hHYXAgKiA1IH1weDtcblxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHQkeyBsYWJlbFN0eWxlcyB9XG5cdH1cblxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xuXHRcdG1pbi13aWR0aDogMjRweDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcblxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0d2lkdGg6IDEwMCU7XG5cblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXG5cdCYmIHtcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgMjAwIF0gfTtcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuXHRcdGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuXHRcdGhlaWdodDogNDZweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xTdHlsZVBpY2tlciA9IGNzc2Bcblx0JHsgU3R5bGVkTGFiZWwgfSB7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyU3R5bGVCdXR0b24gPSBjc3NgXG5cdCYmJiYmIHtcblx0XHRtaW4td2lkdGg6IDMwcHg7XG5cdFx0d2lkdGg6IDMwcHg7XG5cdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdHBhZGRpbmc6IDNweDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2Bcblx0ZmxleDogMSAxIDYwJTtcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cblxuXHQkeyBTdHlsZWRGaWVsZCB9IHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5gO1xuIl19 */");
}; // Must equal $color-palette-circle-size from:
// @wordpress/components/src/circular-option-picker/style.scss


exports.colorIndicatorWrapper = colorIndicatorWrapper;
const swatchSize = 28;
const swatchGap = 12;
const borderControlPopoverControls = /*#__PURE__*/(0, _react.css)("width:", swatchSize * 6 + swatchGap * 5, "px;>div:first-of-type>", _baseControlStyles.StyledLabel, "{margin-bottom:0;", labelStyles, ";}&& ", _baseControlStyles.StyledLabel, "+button:not( .has-text ){min-width:24px;padding:0;}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlPopoverControls;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNKK0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
exports.borderControlPopoverControls = borderControlPopoverControls;
const borderControlPopoverContent = /*#__PURE__*/(0, _react.css)(process.env.NODE_ENV === "production" ? "" : ";label:borderControlPopoverContent;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9LOEMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
exports.borderControlPopoverContent = borderControlPopoverContent;
const borderColorIndicator = /*#__PURE__*/(0, _react.css)(process.env.NODE_ENV === "production" ? "" : ";label:borderColorIndicator;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFLdUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
exports.borderColorIndicator = borderColorIndicator;
const resetButton = /*#__PURE__*/(0, _react.css)("justify-content:center;width:100%;&&{border-top:", _utils.CONFIG.borderWidth, " solid ", _utils.COLORS.gray[200], ";border-top-left-radius:0;border-top-right-radius:0;height:46px;}" + (process.env.NODE_ENV === "production" ? "" : ";label:resetButton;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVLOEIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
exports.resetButton = resetButton;
const borderControlStylePicker = /*#__PURE__*/(0, _react.css)(_baseControlStyles.StyledLabel, "{", labelStyles, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlStylePicker;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9MMkMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");
exports.borderControlStylePicker = borderControlStylePicker;
const borderStyleButton = process.env.NODE_ENV === "production" ? {
  name: "1486260",
  styles: "&&&&&{min-width:30px;width:30px;height:30px;padding:3px;}"
} : {
  name: "6r7ylf-borderStyleButton",
  styles: "&&&&&{min-width:30px;width:30px;height:30px;padding:3px;};label:borderStyleButton;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBMb0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
exports.borderStyleButton = borderStyleButton;

const borderSlider = () => /*#__PURE__*/(0, _react.css)("flex:1 1 60%;", (0, _utils.rtl)({
  marginRight: (0, _space.space)(3)
})(), " ", _baseControlStyles.StyledField, "{margin-bottom:0;font-size:0;display:flex;}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderSlider;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1NcUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91aS91dGlscy9zcGFjZSc7XG5pbXBvcnQge1xuXHRTdHlsZWRGaWVsZCxcblx0U3R5bGVkTGFiZWwsXG59IGZyb20gJy4uL2Jhc2UtY29udHJvbC9zdHlsZXMvYmFzZS1jb250cm9sLXN0eWxlcyc7XG5pbXBvcnQge1xuXHRSb290IGFzIFVuaXRDb250cm9sV3JhcHBlcixcblx0VW5pdFNlbGVjdCxcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcblxuaW1wb3J0IHR5cGUgeyBCb3JkZXIgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgbGFiZWxTdHlsZXMgPSBjc3NgXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XG5gO1xuXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2Bcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAwIDAgJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2Bcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHRmbGV4OiAxIDEgNDAlO1xuXHR9XG5cdCYmICR7IFVuaXRTZWxlY3QgfSB7XG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXG5cdFx0bWluLWhlaWdodDogMDtcblx0fVxuYDtcblxuLypcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxuICogUmFuZ2VDb250cm9sIHRvIHNoYXJlIHRoZSBhdmFpbGFibGUgd2lkdGggaW4gYSA0MC82MCBzcGxpdCByZXNwZWN0aXZlbHkuXG4gKi9cbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXG5cdCR7IFVuaXRDb250cm9sV3JhcHBlciB9IHtcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXG5cdFx0ZmxleDogMCAwIGF1dG87XG5cdH1cbmA7XG5cbi8qXG4gKiBXaGVuIGRlZmF1bHQgY29udHJvbCBoZWlnaHQgaXMgMzZweCB0aGUgZm9sbG93aW5nIHNob3VsZCBiZSByZW1vdmVkLlxuICogU2VlOiBJbnB1dENvbnRyb2wgYW5kIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW4gKSA9PiB7XG5cdHJldHVybiBjc3NgXG5cdFx0aGVpZ2h0OiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMzZweCcgOiAnMzBweCcgfTtcblx0YDtcbn07XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSAoKSA9PiBjc3NgXG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cblx0JiYgPiBidXR0b24ge1xuXHRcdC8qXG5cdFx0ICogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBoZWlnaHQgYW5kIHBhZGRpbmcgdG8gZml0IHdpdGhpblxuXHRcdCAqIEJvcmRlckNvbnRyb2wgcmVnYXJkbGVzcyBvZiBzaXplLlxuXHRcdCAqL1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMC43NSApIH07XG5cdFx0JHsgcnRsKFxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cblx0XHQpKCkgfVxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xuXG5cdFx0Jjpmb2N1cyxcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxuXHRcdFx0Ym9yZGVyLWNvbG9yOiAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcblx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0fVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcblxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XG5cdFx0Ym9yZGVyLWNvbG9yOiAkeyBjb2xvciB8fCBmYWxsYmFja0NvbG9yIH07XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxuXHRib3JkZXI/OiBCb3JkZXIsXG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZT86IGJvb2xlYW5cbikgPT4ge1xuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3JkZXItcmFkaXVzOiA5OTk5cHg7XG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0JHsgc3R5bGUgPyBjb2xvckluZGljYXRvckJvcmRlciggYm9yZGVyICkgOiB1bmRlZmluZWQgfVxuXHRcdHdpZHRoOiAkeyBfX25leHQzNnB4RGVmYXVsdFNpemUgPyAnMjhweCcgOiAnMjJweCcgfTtcblx0XHRoZWlnaHQ6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcyOHB4JyA6ICcyMnB4JyB9O1xuXHRcdHBhZGRpbmc6ICR7IF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSA/ICcycHgnIDogJzFweCcgfTtcblxuXHRcdC8qXG5cdFx0ICogQ29sb3JJbmRpY2F0b3Jcblx0XHQgKlxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3Jcblx0XHQgKiBvdmVyIHRoZSBhY3RpdmUgc3RhdGUgb2YgdGhlIGJvcmRlciBjb250cm9sIGRyb3Bkb3duJ3MgdG9nZ2xlIGJ1dHRvbi5cblx0XHQgKi9cblx0XHQmID4gc3BhbiB7XG5cdFx0XHQkeyAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZVxuXHRcdFx0XHQ/IGNzc2Bcblx0XHRcdFx0XHRcdC8qIERpbWVuc2lvbnMgZml0IGluIDMwcHggb3ZlcmFsbCBjb250cm9sIGhlaWdodC4gKi9cblx0XHRcdFx0XHRcdGhlaWdodDogMTZweDtcblx0XHRcdFx0XHRcdHdpZHRoOiAxNnB4O1xuXHRcdFx0XHQgIGBcblx0XHRcdFx0OiAnJyB9XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG5cdFx0XHRcdC00NWRlZyxcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNTIlLFxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcblx0XHRcdCk7XG5cdFx0fVxuXHRgO1xufTtcblxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcbmNvbnN0IHN3YXRjaFNpemUgPSAyODtcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xuXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250cm9scyA9IGNzc2Bcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XG5cblx0PiBkaXY6Zmlyc3Qtb2YtdHlwZSA+ICR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0JHsgbGFiZWxTdHlsZXMgfVxuXHR9XG5cblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcblx0XHRtaW4td2lkdGg6IDI0cHg7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9ySW5kaWNhdG9yID0gY3NzYGA7XG5cbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2Bcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdC8qIE92ZXJyaWRlIGJ1dHRvbiBjb21wb25lbnQgc3R5bGluZyAqL1xuXHQmJiB7XG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDIwMCBdIH07XG5cdFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcblx0XHRoZWlnaHQ6IDQ2cHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sU3R5bGVQaWNrZXIgPSBjc3NgXG5cdCR7IFN0eWxlZExhYmVsIH0ge1xuXHRcdCR7IGxhYmVsU3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IGJvcmRlclN0eWxlQnV0dG9uID0gY3NzYFxuXHQmJiYmJiB7XG5cdFx0bWluLXdpZHRoOiAzMHB4O1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRwYWRkaW5nOiAzcHg7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBib3JkZXJTbGlkZXIgPSAoKSA9PiBjc3NgXG5cdGZsZXg6IDEgMSA2MCU7XG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XG5cblx0JHsgU3R5bGVkRmllbGQgfSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHRmb250LXNpemU6IDA7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0fVxuYDtcbiJdfQ== */");

exports.borderSlider = borderSlider;
//# sourceMappingURL=styles.js.map